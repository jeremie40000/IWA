spring.datasource.url=jdbc:postgresql://localhost:5432/keycloak
spring.datasource.username=keycloak
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true
server.port=5000

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id="my_group_id"
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

#keycloak.realm= MyDemo
#keycloak.auth-server-url = http://127.0.0.1:8080/auth
#keycloak.ssl-required = external
#keycloak.resource = api
#keycloak.public-client= false
#keycloak.credentials.secret = d1f29e18-54dd-402d-b990-203f776d8778
#keycloak.bearer-only= true
#keycloak.security-constraints[0].security-collections[0].patterns[0]= /covidalert/api/*
#keycloak.securityCollections[0]:
#keycloak.methods[0]: GET
#keycloak.methods[1]: PUT
#keycloak.methods[2]: DELETE
#keycloak.methods[3]: PATCH
keycloak.realm                      = Demo
keycloak.auth-server-url            = http://localhost:8080/auth
keycloak.ssl-required               = external
keycloak.resource                   = demo-api
keycloak.credentials.secret         = 7b4dfe4b-013d-46d1-8186-cbeb4fe40985
keycloak.bearer-only                = true
keycloak.security-constraints[0].authRoles[0]=user
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/*