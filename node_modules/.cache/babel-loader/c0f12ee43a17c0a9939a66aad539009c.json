{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar async = require('async');\n\nvar EventEmitter = require('events');\n\nfunction Offset(client) {\n  EventEmitter.call(this);\n  var self = this;\n  this.client = client;\n  this.ready = this.client.ready;\n  this.client.on('ready', function () {\n    self.ready = true;\n    self.emit('ready');\n  });\n  this.client.once('connect', function () {\n    self.emit('connect');\n  });\n  this.client.on('error', function (err) {\n    self.emit('error', err);\n  });\n}\n\nutil.inherits(Offset, EventEmitter);\n\nOffset.prototype.fetch = function (payloads, cb) {\n  if (!this.ready) {\n    this.once('ready', () => this.fetch(payloads, cb));\n    return;\n  }\n\n  this.client.sendOffsetRequest(this.buildPayloads(payloads), cb);\n};\n\nOffset.prototype.buildPayloads = function (payloads) {\n  return payloads.map(function (p) {\n    p.partition = p.partition || 0;\n    p.time = p.time || Date.now();\n    p.maxNum = p.maxNum || 1;\n    p.metadata = 'm'; // metadata can be arbitrary\n\n    return p;\n  });\n};\n\nOffset.prototype.buildOffsetFetchV1Payloads = function (payloads) {\n  return payloads.reduce(function (out, p) {\n    out[p.topic] = out[p.topic] || [];\n    out[p.topic].push(p.partition || 0);\n    return out;\n  }, {});\n};\n\nOffset.prototype.commit = function (groupId, payloads, cb) {\n  if (!this.ready) {\n    this.once('ready', () => this.commit(groupId, payloads, cb));\n    return;\n  }\n\n  this.client.sendOffsetCommitRequest(groupId, this.buildPayloads(payloads), cb);\n};\n\nOffset.prototype.fetchCommits = Offset.prototype.fetchCommitsV1 = function (groupId, payloads, cb) {\n  if (!this.ready) {\n    this.once('ready', () => this.fetchCommitsV1(groupId, payloads, cb));\n    return;\n  }\n\n  this.client.setCoordinatorIdAndSendOffsetFetchV1Request(groupId, this.buildOffsetFetchV1Payloads(payloads), cb);\n};\n\nOffset.prototype.fetchLatestOffsets = function (topics, cb) {\n  fetchOffsets(this, topics, cb, -1);\n};\n\nOffset.prototype.fetchEarliestOffsets = function (topics, cb) {\n  fetchOffsets(this, topics, cb, -2);\n}; // private helper\n\n\nfunction fetchOffsets(offset, topics, cb, when) {\n  if (!offset.ready) {\n    if (when === -1) {\n      offset.once('ready', () => offset.fetchLatestOffsets(topics, cb));\n    } else if (when === -2) {\n      offset.once('ready', () => offset.fetchEarliestOffsets(topics, cb));\n    }\n\n    return;\n  }\n\n  async.waterfall([callback => {\n    offset.client.loadMetadataForTopics(topics, callback);\n  }, (topicsMetaData, callback) => {\n    var payloads = [];\n    var metaDatas = topicsMetaData[1].metadata;\n    Object.keys(metaDatas).forEach(function (topicName) {\n      var topic = metaDatas[topicName];\n      Object.keys(topic).forEach(function (partition) {\n        payloads.push({\n          topic: topicName,\n          partition: partition,\n          time: when\n        });\n      });\n    });\n\n    if (payloads.length === 0) {\n      return callback(new Error('Topic(s) does not exist'));\n    }\n\n    offset.fetch(payloads, callback);\n  }, function (results, callback) {\n    Object.keys(results).forEach(function (topicName) {\n      var topic = results[topicName];\n      Object.keys(topic).forEach(function (partitionName) {\n        topic[partitionName] = topic[partitionName][0];\n      });\n    });\n    callback(null, results);\n  }], cb);\n}\n\nmodule.exports = Offset;","map":{"version":3,"sources":["/home/jerem/Bureau/Cours/IWA/stopcovid-front/node_modules/kafka-node/lib/offset.js"],"names":["util","require","async","EventEmitter","Offset","client","call","self","ready","on","emit","once","err","inherits","prototype","fetch","payloads","cb","sendOffsetRequest","buildPayloads","map","p","partition","time","Date","now","maxNum","metadata","buildOffsetFetchV1Payloads","reduce","out","topic","push","commit","groupId","sendOffsetCommitRequest","fetchCommits","fetchCommitsV1","setCoordinatorIdAndSendOffsetFetchV1Request","fetchLatestOffsets","topics","fetchOffsets","fetchEarliestOffsets","offset","when","waterfall","callback","loadMetadataForTopics","topicsMetaData","metaDatas","Object","keys","forEach","topicName","length","Error","results","partitionName","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar util = require('util');\nvar async = require('async');\nvar EventEmitter = require('events');\n\nfunction Offset (client) {\n  EventEmitter.call(this);\n  var self = this;\n  this.client = client;\n  this.ready = this.client.ready;\n  this.client.on('ready', function () {\n    self.ready = true;\n    self.emit('ready');\n  });\n  this.client.once('connect', function () {\n    self.emit('connect');\n  });\n  this.client.on('error', function (err) {\n    self.emit('error', err);\n  });\n}\nutil.inherits(Offset, EventEmitter);\n\nOffset.prototype.fetch = function (payloads, cb) {\n  if (!this.ready) {\n    this.once('ready', () => this.fetch(payloads, cb));\n    return;\n  }\n  this.client.sendOffsetRequest(this.buildPayloads(payloads), cb);\n};\n\nOffset.prototype.buildPayloads = function (payloads) {\n  return payloads.map(function (p) {\n    p.partition = p.partition || 0;\n    p.time = p.time || Date.now();\n    p.maxNum = p.maxNum || 1;\n    p.metadata = 'm'; // metadata can be arbitrary\n    return p;\n  });\n};\n\nOffset.prototype.buildOffsetFetchV1Payloads = function (payloads) {\n  return payloads.reduce(function (out, p) {\n    out[p.topic] = out[p.topic] || [];\n    out[p.topic].push(p.partition || 0);\n    return out;\n  }, {});\n};\n\nOffset.prototype.commit = function (groupId, payloads, cb) {\n  if (!this.ready) {\n    this.once('ready', () => this.commit(groupId, payloads, cb));\n    return;\n  }\n  this.client.sendOffsetCommitRequest(groupId, this.buildPayloads(payloads), cb);\n};\n\nOffset.prototype.fetchCommits = Offset.prototype.fetchCommitsV1 = function (groupId, payloads, cb) {\n  if (!this.ready) {\n    this.once('ready', () => this.fetchCommitsV1(groupId, payloads, cb));\n    return;\n  }\n  this.client.setCoordinatorIdAndSendOffsetFetchV1Request(groupId, this.buildOffsetFetchV1Payloads(payloads), cb);\n};\n\nOffset.prototype.fetchLatestOffsets = function (topics, cb) {\n  fetchOffsets(this, topics, cb, -1);\n};\n\nOffset.prototype.fetchEarliestOffsets = function (topics, cb) {\n  fetchOffsets(this, topics, cb, -2);\n};\n\n// private helper\nfunction fetchOffsets (offset, topics, cb, when) {\n  if (!offset.ready) {\n    if (when === -1) {\n      offset.once('ready', () => offset.fetchLatestOffsets(topics, cb));\n    } else if (when === -2) {\n      offset.once('ready', () => offset.fetchEarliestOffsets(topics, cb));\n    }\n    return;\n  }\n  async.waterfall(\n    [\n      callback => {\n        offset.client.loadMetadataForTopics(topics, callback);\n      },\n      (topicsMetaData, callback) => {\n        var payloads = [];\n        var metaDatas = topicsMetaData[1].metadata;\n        Object.keys(metaDatas).forEach(function (topicName) {\n          var topic = metaDatas[topicName];\n          Object.keys(topic).forEach(function (partition) {\n            payloads.push({\n              topic: topicName,\n              partition: partition,\n              time: when\n            });\n          });\n        });\n\n        if (payloads.length === 0) {\n          return callback(new Error('Topic(s) does not exist'));\n        }\n\n        offset.fetch(payloads, callback);\n      },\n      function (results, callback) {\n        Object.keys(results).forEach(function (topicName) {\n          var topic = results[topicName];\n\n          Object.keys(topic).forEach(function (partitionName) {\n            topic[partitionName] = topic[partitionName][0];\n          });\n        });\n        callback(null, results);\n      }\n    ],\n    cb\n  );\n}\n\nmodule.exports = Offset;\n"]},"metadata":{},"sourceType":"script"}