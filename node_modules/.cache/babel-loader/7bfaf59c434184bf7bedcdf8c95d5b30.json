{"ast":null,"code":"'use strict';\n\nconst HeartbeatTimeoutError = require('./errors/HeartbeatTimeoutError');\n\nconst logger = require('./logging')('kafka-node:ConsumerGroupHeartbeat');\n\nmodule.exports = class Heartbeat {\n  constructor(client, handler) {\n    this.client = client;\n    this.handler = handler;\n    this.pending = true;\n  }\n\n  send(groupId, generationId, memberId) {\n    this.client.sendHeartbeatRequest(groupId, generationId, memberId, error => {\n      if (this.canceled) {\n        logger.debug('heartbeat yielded after being canceled', error);\n        return;\n      }\n\n      this.pending = false;\n      this.handler(error);\n    });\n  }\n\n  verifyResolved() {\n    if (this.pending) {\n      this.canceled = true;\n      this.pending = false;\n      this.handler(new HeartbeatTimeoutError('Heartbeat timed out'));\n      return false;\n    }\n\n    return true;\n  }\n\n};","map":{"version":3,"sources":["/home/jerem/Bureau/Cours/IWA/stopcovid-front/node_modules/kafka-node/lib/consumerGroupHeartbeat.js"],"names":["HeartbeatTimeoutError","require","logger","module","exports","Heartbeat","constructor","client","handler","pending","send","groupId","generationId","memberId","sendHeartbeatRequest","error","canceled","debug","verifyResolved"],"mappings":"AAAA;;AAEA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,gCAAD,CAArC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAP,CAAqB,mCAArB,CAAf;;AAEAE,MAAM,CAACC,OAAP,GAAiB,MAAMC,SAAN,CAAgB;AAC/BC,EAAAA,WAAW,CAAEC,MAAF,EAAUC,OAAV,EAAmB;AAC5B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;;AAEDC,EAAAA,IAAI,CAAEC,OAAF,EAAWC,YAAX,EAAyBC,QAAzB,EAAmC;AACrC,SAAKN,MAAL,CAAYO,oBAAZ,CAAiCH,OAAjC,EAA0CC,YAA1C,EAAwDC,QAAxD,EAAmEE,KAAD,IAAW;AAC3E,UAAI,KAAKC,QAAT,EAAmB;AACjBd,QAAAA,MAAM,CAACe,KAAP,CAAa,wCAAb,EAAuDF,KAAvD;AACA;AACD;;AACD,WAAKN,OAAL,GAAe,KAAf;AACA,WAAKD,OAAL,CAAaO,KAAb;AACD,KAPD;AAQD;;AAEDG,EAAAA,cAAc,GAAI;AAChB,QAAI,KAAKT,OAAT,EAAkB;AAChB,WAAKO,QAAL,GAAgB,IAAhB;AACA,WAAKP,OAAL,GAAe,KAAf;AACA,WAAKD,OAAL,CAAa,IAAIR,qBAAJ,CAA0B,qBAA1B,CAAb;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AA1B8B,CAAjC","sourcesContent":["'use strict';\n\nconst HeartbeatTimeoutError = require('./errors/HeartbeatTimeoutError');\nconst logger = require('./logging')('kafka-node:ConsumerGroupHeartbeat');\n\nmodule.exports = class Heartbeat {\n  constructor (client, handler) {\n    this.client = client;\n    this.handler = handler;\n    this.pending = true;\n  }\n\n  send (groupId, generationId, memberId) {\n    this.client.sendHeartbeatRequest(groupId, generationId, memberId, (error) => {\n      if (this.canceled) {\n        logger.debug('heartbeat yielded after being canceled', error);\n        return;\n      }\n      this.pending = false;\n      this.handler(error);\n    });\n  }\n\n  verifyResolved () {\n    if (this.pending) {\n      this.canceled = true;\n      this.pending = false;\n      this.handler(new HeartbeatTimeoutError('Heartbeat timed out'));\n      return false;\n    }\n    return true;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}