{"ast":null,"code":"'use strict';\n\nvar BrokerReadable = require('./BrokerReadable');\n\nvar BrokerTransform = require('./BrokerTransform');\n\nconst util = require('util');\n\nconst EventEmitter = require('events');\n\nvar BrokerWrapper = function (socket, noAckBatchOptions, idleConnectionMs, needAuthentication) {\n  EventEmitter.call(this);\n  this.socket = socket;\n  this.idleConnectionMs = idleConnectionMs;\n  this.needAuthentication = !!needAuthentication;\n  this.authenticated = false;\n  var self = this;\n  var readable = new BrokerReadable();\n  var transform = new BrokerTransform(noAckBatchOptions);\n  readable.pipe(transform);\n  transform.on('readable', function () {\n    var bulkMessage = null;\n    self._lastWrite = Date.now();\n\n    while (bulkMessage = transform.read()) {\n      // eslint-disable-line no-cond-assign\n      self.socket.write(bulkMessage);\n    }\n  });\n  this.readableSocket = readable;\n};\n\nutil.inherits(BrokerWrapper, EventEmitter);\n\nBrokerWrapper.prototype.getReadyEventName = function () {\n  const lp = this.socket.longpolling ? '-longpolling' : '';\n  return `${this.socket.addr}${lp}-ready`;\n};\n\nBrokerWrapper.prototype.isConnected = function () {\n  return !this.socket.destroyed && !this.socket.closing && !this.socket.error;\n};\n\nBrokerWrapper.prototype.isReady = function () {\n  return this.apiSupport != null && (!this.needAuthentication || this.authenticated);\n};\n\nBrokerWrapper.prototype.isIdle = function () {\n  return Date.now() - this._lastWrite >= this.idleConnectionMs;\n};\n\nBrokerWrapper.prototype.write = function (buffer) {\n  this._lastWrite = Date.now();\n  this.socket.write(buffer);\n};\n\nBrokerWrapper.prototype.writeAsync = function (buffer) {\n  this.readableSocket.push(buffer);\n};\n\nBrokerWrapper.prototype.toString = function () {\n  return `[${this.constructor.name} ${this.socket.addr} (connected: ${this.isConnected()}) (ready: ${this.isReady()}) (idle: ${this.isIdle()}) (needAuthentication: ${this.needAuthentication}) (authenticated: ${this.authenticated})]`;\n};\n\nmodule.exports = BrokerWrapper;","map":{"version":3,"sources":["/home/jerem/Bureau/Cours/IWA/stopcovid-front/node_modules/kafka-node/lib/wrapper/BrokerWrapper.js"],"names":["BrokerReadable","require","BrokerTransform","util","EventEmitter","BrokerWrapper","socket","noAckBatchOptions","idleConnectionMs","needAuthentication","call","authenticated","self","readable","transform","pipe","on","bulkMessage","_lastWrite","Date","now","read","write","readableSocket","inherits","prototype","getReadyEventName","lp","longpolling","addr","isConnected","destroyed","closing","error","isReady","apiSupport","isIdle","buffer","writeAsync","push","toString","constructor","name","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA7B;;AAEA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,QAAD,CAA5B;;AAEA,IAAII,aAAa,GAAG,UAAUC,MAAV,EAAkBC,iBAAlB,EAAqCC,gBAArC,EAAuDC,kBAAvD,EAA2E;AAC7FL,EAAAA,YAAY,CAACM,IAAb,CAAkB,IAAlB;AACA,OAAKJ,MAAL,GAAcA,MAAd;AACA,OAAKE,gBAAL,GAAwBA,gBAAxB;AACA,OAAKC,kBAAL,GAA0B,CAAC,CAACA,kBAA5B;AACA,OAAKE,aAAL,GAAqB,KAArB;AAEA,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,QAAQ,GAAG,IAAIb,cAAJ,EAAf;AACA,MAAIc,SAAS,GAAG,IAAIZ,eAAJ,CAAoBK,iBAApB,CAAhB;AAEAM,EAAAA,QAAQ,CAACE,IAAT,CAAcD,SAAd;AAEAA,EAAAA,SAAS,CAACE,EAAV,CAAa,UAAb,EAAyB,YAAY;AACnC,QAAIC,WAAW,GAAG,IAAlB;AACAL,IAAAA,IAAI,CAACM,UAAL,GAAkBC,IAAI,CAACC,GAAL,EAAlB;;AACA,WAAQH,WAAW,GAAGH,SAAS,CAACO,IAAV,EAAtB,EAAyC;AACvC;AACAT,MAAAA,IAAI,CAACN,MAAL,CAAYgB,KAAZ,CAAkBL,WAAlB;AACD;AACF,GAPD;AASA,OAAKM,cAAL,GAAsBV,QAAtB;AACD,CAvBD;;AAyBAV,IAAI,CAACqB,QAAL,CAAcnB,aAAd,EAA6BD,YAA7B;;AAEAC,aAAa,CAACoB,SAAd,CAAwBC,iBAAxB,GAA4C,YAAY;AACtD,QAAMC,EAAE,GAAG,KAAKrB,MAAL,CAAYsB,WAAZ,GAA0B,cAA1B,GAA2C,EAAtD;AACA,SAAQ,GAAE,KAAKtB,MAAL,CAAYuB,IAAK,GAAEF,EAAG,QAAhC;AACD,CAHD;;AAKAtB,aAAa,CAACoB,SAAd,CAAwBK,WAAxB,GAAsC,YAAY;AAChD,SAAO,CAAC,KAAKxB,MAAL,CAAYyB,SAAb,IAA0B,CAAC,KAAKzB,MAAL,CAAY0B,OAAvC,IAAkD,CAAC,KAAK1B,MAAL,CAAY2B,KAAtE;AACD,CAFD;;AAIA5B,aAAa,CAACoB,SAAd,CAAwBS,OAAxB,GAAkC,YAAY;AAC5C,SAAO,KAAKC,UAAL,IAAmB,IAAnB,KAA4B,CAAC,KAAK1B,kBAAN,IAA4B,KAAKE,aAA7D,CAAP;AACD,CAFD;;AAIAN,aAAa,CAACoB,SAAd,CAAwBW,MAAxB,GAAiC,YAAY;AAC3C,SAAOjB,IAAI,CAACC,GAAL,KAAa,KAAKF,UAAlB,IAAgC,KAAKV,gBAA5C;AACD,CAFD;;AAIAH,aAAa,CAACoB,SAAd,CAAwBH,KAAxB,GAAgC,UAAUe,MAAV,EAAkB;AAChD,OAAKnB,UAAL,GAAkBC,IAAI,CAACC,GAAL,EAAlB;AACA,OAAKd,MAAL,CAAYgB,KAAZ,CAAkBe,MAAlB;AACD,CAHD;;AAKAhC,aAAa,CAACoB,SAAd,CAAwBa,UAAxB,GAAqC,UAAUD,MAAV,EAAkB;AACrD,OAAKd,cAAL,CAAoBgB,IAApB,CAAyBF,MAAzB;AACD,CAFD;;AAIAhC,aAAa,CAACoB,SAAd,CAAwBe,QAAxB,GAAmC,YAAY;AAC7C,SAAQ,IAAG,KAAKC,WAAL,CAAiBC,IAAK,IAC/B,KAAKpC,MAAL,CAAYuB,IACb,gBAAe,KAAKC,WAAL,EAAmB,aACjC,KAAKI,OAAL,EACD,YACC,KAAKE,MAAL,EACD,0BACC,KAAK3B,kBACN,qBACC,KAAKE,aACN,IAVD;AAWD,CAZD;;AAcAgC,MAAM,CAACC,OAAP,GAAiBvC,aAAjB","sourcesContent":["'use strict';\n\nvar BrokerReadable = require('./BrokerReadable');\nvar BrokerTransform = require('./BrokerTransform');\n\nconst util = require('util');\nconst EventEmitter = require('events');\n\nvar BrokerWrapper = function (socket, noAckBatchOptions, idleConnectionMs, needAuthentication) {\n  EventEmitter.call(this);\n  this.socket = socket;\n  this.idleConnectionMs = idleConnectionMs;\n  this.needAuthentication = !!needAuthentication;\n  this.authenticated = false;\n\n  var self = this;\n  var readable = new BrokerReadable();\n  var transform = new BrokerTransform(noAckBatchOptions);\n\n  readable.pipe(transform);\n\n  transform.on('readable', function () {\n    var bulkMessage = null;\n    self._lastWrite = Date.now();\n    while ((bulkMessage = transform.read())) {\n      // eslint-disable-line no-cond-assign\n      self.socket.write(bulkMessage);\n    }\n  });\n\n  this.readableSocket = readable;\n};\n\nutil.inherits(BrokerWrapper, EventEmitter);\n\nBrokerWrapper.prototype.getReadyEventName = function () {\n  const lp = this.socket.longpolling ? '-longpolling' : '';\n  return `${this.socket.addr}${lp}-ready`;\n};\n\nBrokerWrapper.prototype.isConnected = function () {\n  return !this.socket.destroyed && !this.socket.closing && !this.socket.error;\n};\n\nBrokerWrapper.prototype.isReady = function () {\n  return this.apiSupport != null && (!this.needAuthentication || this.authenticated);\n};\n\nBrokerWrapper.prototype.isIdle = function () {\n  return Date.now() - this._lastWrite >= this.idleConnectionMs;\n};\n\nBrokerWrapper.prototype.write = function (buffer) {\n  this._lastWrite = Date.now();\n  this.socket.write(buffer);\n};\n\nBrokerWrapper.prototype.writeAsync = function (buffer) {\n  this.readableSocket.push(buffer);\n};\n\nBrokerWrapper.prototype.toString = function () {\n  return `[${this.constructor.name} ${\n    this.socket.addr\n  } (connected: ${this.isConnected()}) (ready: ${\n    this.isReady()\n  }) (idle: ${\n    this.isIdle()\n  }) (needAuthentication: ${\n    this.needAuthentication\n  }) (authenticated: ${\n    this.authenticated\n  })]`;\n};\n\nmodule.exports = BrokerWrapper;\n"]},"metadata":{},"sourceType":"script"}