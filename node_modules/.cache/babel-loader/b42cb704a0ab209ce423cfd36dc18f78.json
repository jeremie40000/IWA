{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jerem/Bureau/Cours/IWA/stopcovid-front/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useKeycloak } from '@react-keycloak/web';\nimport AuthrizedElement from '../components/AuthrizedElement';\nimport { sendLocalisationEvery5Minutes } from \"../services/localisations\";\nimport moment from \"moment\";\nimport * as schedule from \"node-schedule\";\nimport * as kafka from \"kafka-node\";\n\nconst HomePage = () => {\n  _s();\n\n  const {\n    keycloak,\n    initialized\n  } = useKeycloak();\n  const [isSendingLocalisation, setIsSendingLocalisation] = React.useState(false);\n  const Producer = kafka.Producer;\n  const KeyedMessage = kafka.KeyedMessage;\n  const client = new kafka.KafkaClient();\n  const producer = new Producer(client);\n  const km = new KeyedMessage('key', 'message');\n  React.useEffect(() => {\n    scheduleSending();\n  }, []);\n\n  const scheduleSending = () => {\n    var ruleSendEvery5M = new schedule.RecurrenceRule();\n    ruleSendEvery5M.minute = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 55];\n    ruleSendEvery5M.second = 0;\n    var eventNotif = schedule.scheduleJob(ruleSendEvery5M, function () {\n      sendLocalisation();\n    });\n  };\n\n  const sendLocalisation = () => {\n    if (keycloak.authenticated) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const coords = console.log('position : (' + position.coords.latitude + ', ' + position.coords.longitude + ')', 'at : ', moment(position.timestamp).format('mm'));\n        const payloads = [{\n          topic: 'my_topic',\n          messages: []\n        }];\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Anyone can access this page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), initialized ? keycloak.authenticated && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(keycloak, undefined, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"keycloak initializing ....!!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"XxPdISJXAoiXbi322z2owUw6KBM=\", false, function () {\n  return [useKeycloak];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/jerem/Bureau/Cours/IWA/stopcovid-front/src/pages/HomePage.js"],"names":["React","useKeycloak","AuthrizedElement","sendLocalisationEvery5Minutes","moment","schedule","kafka","HomePage","keycloak","initialized","isSendingLocalisation","setIsSendingLocalisation","useState","Producer","KeyedMessage","client","KafkaClient","producer","km","useEffect","scheduleSending","ruleSendEvery5M","RecurrenceRule","minute","second","eventNotif","scheduleJob","sendLocalisation","authenticated","navigator","geolocation","getCurrentPosition","position","coords","console","log","latitude","longitude","timestamp","format","payloads","topic","messages","JSON","stringify","undefined"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAAQC,6BAAR,QAA4C,2BAA5C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BR,WAAW,EAA3C;AACA,QAAM,CAACS,qBAAD,EAAwBC,wBAAxB,IAAoDX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA1D;AACA,QAAMC,QAAQ,GAAGP,KAAK,CAACO,QAAvB;AACA,QAAMC,YAAY,GAAGR,KAAK,CAACQ,YAA3B;AACA,QAAMC,MAAM,GAAG,IAAIT,KAAK,CAACU,WAAV,EAAf;AACA,QAAMC,QAAQ,GAAG,IAAIJ,QAAJ,CAAaE,MAAb,CAAjB;AACA,QAAMG,EAAE,GAAG,IAAIJ,YAAJ,CAAiB,KAAjB,EAAwB,SAAxB,CAAX;AAEAd,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AAClBC,IAAAA,eAAe;AAClB,GAFD,EAEG,EAFH;;AAIA,QAAMA,eAAe,GAAG,MAAM;AAC1B,QAAIC,eAAe,GAAG,IAAIhB,QAAQ,CAACiB,cAAb,EAAtB;AACAD,IAAAA,eAAe,CAACE,MAAhB,GAAyB,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,EAAR,EAAW,EAAX,EAAc,EAAd,EAAiB,EAAjB,EAAoB,EAApB,EAAuB,EAAvB,EAA0B,EAA1B,EAA6B,EAA7B,CAAzB;AACAF,IAAAA,eAAe,CAACG,MAAhB,GAAyB,CAAzB;AACA,QAAIC,UAAU,GAAGpB,QAAQ,CAACqB,WAAT,CAAqBL,eAArB,EAAsC,YAAU;AAC7DM,MAAAA,gBAAgB;AACnB,KAFgB,CAAjB;AAGH,GAPD;;AASA,QAAMA,gBAAgB,GAAG,MAAM;AAC3B,QAAGnB,QAAQ,CAACoB,aAAZ,EAA0B;AACtBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnD,cAAMC,MAAM,GACZC,OAAO,CAACC,GAAR,CAAY,iBAAiBH,QAAQ,CAACC,MAAT,CAAgBG,QAAjC,GAA4C,IAA5C,GAAmDJ,QAAQ,CAACC,MAAT,CAAgBI,SAAnE,GAA+E,GAA3F,EAAgG,OAAhG,EAAyGjC,MAAM,CAAC4B,QAAQ,CAACM,SAAV,CAAN,CAA2BC,MAA3B,CAAkC,IAAlC,CAAzG,CADA;AAEA,cAAMC,QAAQ,GAAG,CACb;AAACC,UAAAA,KAAK,EAAE,UAAR;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SADa,CAAjB;AAGH,OAND;AAOH;AACJ,GAVD;;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAKKjC,WAAW,GACRD,QAAQ,CAACoB,aAAT,iBAA0B;AAAA,gBAAOe,IAAI,CAACC,SAAL,CAAepC,QAAf,EAAyBqC,SAAzB,EAAoC,CAApC;AAAP;AAAA;AAAA;AAAA;AAAA,YADlB,gBAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA9CD;;GAAMtC,Q;UAC8BN,W;;;KAD9BM,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useKeycloak } from '@react-keycloak/web';\nimport AuthrizedElement from '../components/AuthrizedElement';\nimport {sendLocalisationEvery5Minutes} from \"../services/localisations\";\nimport moment from \"moment\";\nimport * as schedule from \"node-schedule\";\nimport * as kafka from \"kafka-node\";\n\nconst HomePage = () => {\n    const {keycloak, initialized} = useKeycloak();\n    const [isSendingLocalisation, setIsSendingLocalisation] = React.useState(false);\n    const Producer = kafka.Producer;\n    const KeyedMessage = kafka.KeyedMessage;\n    const client = new kafka.KafkaClient();\n    const producer = new Producer(client);\n    const km = new KeyedMessage('key', 'message');\n\n    React.useEffect(() => {\n        scheduleSending();\n    }, [])\n\n    const scheduleSending = () => {\n        var ruleSendEvery5M = new schedule.RecurrenceRule();\n        ruleSendEvery5M.minute = [0,5,10,15,20,25,30,35,40,45,55];\n        ruleSendEvery5M.second = 0;\n        var eventNotif = schedule.scheduleJob(ruleSendEvery5M, function(){\n            sendLocalisation();\n        });\n    }\n\n    const sendLocalisation = () => {\n        if(keycloak.authenticated){\n            navigator.geolocation.getCurrentPosition((position) => {\n                const coords =\n                console.log('position : (' + position.coords.latitude + ', ' + position.coords.longitude + ')', 'at : ', moment(position.timestamp).format('mm'));\n                const payloads = [\n                    {topic: 'my_topic', messages: []}\n                ]\n            })\n        }\n    }\n\n    return (\n        <div>\n            <h1>Home Page</h1>\n\n            <strong>Anyone can access this page</strong>\n\n            {initialized ?\n                keycloak.authenticated && <pre >{JSON.stringify(keycloak, undefined, 2)}</pre>\n                : <h2>keycloak initializing ....!!!!</h2>\n            }\n        </div>\n    )\n}\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}