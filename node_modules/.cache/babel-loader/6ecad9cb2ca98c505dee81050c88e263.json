{"ast":null,"code":"'use strict';\n\nvar Binary = require('binary');\n\nvar Buffermaker = require('buffermaker');\n\nvar _ = require('lodash');\n\nvar crc32 = require('buffer-crc32');\n\nvar protocol = require('./protocol_struct');\n\nvar getCodec = require('../codec');\n\nvar REQUEST_TYPE = protocol.REQUEST_TYPE;\nvar ERROR_CODE = protocol.ERROR_CODE;\nvar GROUP_ERROR = protocol.GROUP_ERROR;\nvar PartitionMetadata = protocol.PartitionMetadata;\n\nconst API_KEY_TO_NAME = _.invert(REQUEST_TYPE);\n\nconst MessageSizeTooLarge = require('../errors/MessageSizeTooLargeError');\n\nconst SaslAuthenticationError = require('../errors/SaslAuthenticationError');\n\nconst InvalidRequestError = require('../errors/InvalidRequestError');\n\nconst async = require('async');\n\nvar API_VERSION = 0;\nvar REPLICA_ID = -1;\nvar GROUPS_PROTOCOL_TYPE = 'consumer';\n\nfunction groupByTopic(payloads) {\n  return payloads.reduce(function (out, p) {\n    out[p.topic] = out[p.topic] || {};\n    out[p.topic][p.partition] = p;\n    return out;\n  }, {});\n}\n\nfunction encodeRequestWithLength(request) {\n  return new Buffermaker().Int32BE(request.length).string(request).make();\n}\n\nfunction encodeRequestHeader(clientId, correlationId, apiKey, apiVersion) {\n  return new Buffermaker().Int16BE(apiKey).Int16BE(apiVersion || API_VERSION).Int32BE(correlationId).Int16BE(clientId.length).string(clientId);\n}\n\nfunction encodeSaslHandshakeRequest(clientId, correlationId, apiVersion, mechanism) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.saslHandshake, apiVersion);\n  request.Int16BE(mechanism.length).string(mechanism.toUpperCase());\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeSaslHandshakeResponse(resp) {\n  var mechanisms = [];\n  var errorCode = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    errorCode = vars.errorCode;\n  }).word32bs('numMechanisms').loop(_decodeMechanisms);\n\n  function _decodeMechanisms(end, vars) {\n    if (vars.numMechanisms-- === 0) {\n      return end();\n    }\n\n    this.word16be('mechanismSize').tap(function (vars) {\n      this.buffer('mechanism', vars.mechanismSize);\n      mechanisms.push(vars.mechanism);\n    });\n  }\n\n  if (errorCode == null || errorCode === 0) {\n    return mechanisms;\n  }\n\n  return new SaslAuthenticationError(errorCode, 'Handshake failed.');\n}\n\nfunction encodeSaslAuthenticateRequest(clientId, correlationId, apiVersion, saslOpts) {\n  //\n  // FIXME From the Kafka protocol docs:\n  //       If SaslHandshakeRequest version is v0, a series of SASL client and server tokens\n  //       corresponding to the mechanism are sent as opaque packets without wrapping the\n  //       messages with Kafka protocol headers. If SaslHandshakeRequest version is v1, the\n  //       SaslAuthenticate request/response are used, where the actual SASL tokens are\n  //       wrapped in the Kafka protocol.\n  //\n  var username = saslOpts.username || '';\n  var password = saslOpts.password || '';\n  var authBytes = null;\n\n  if (saslOpts.mechanism.toUpperCase() === 'PLAIN') {\n    authBytes = new Buffermaker().string(username).Int8(0).string(username).Int8(0).string(password).make();\n  } else {\n    return new Error('unsupported SASL auth type: ' + saslOpts.mechanism.toUpperCase());\n  }\n\n  if (apiVersion === 0) {\n    return encodeRequestWithLength(authBytes);\n  }\n\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.saslAuthenticate, 0);\n  request.Int32BE(authBytes.length).string(authBytes);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeSaslAuthenticateResponse(resp) {\n  var errorCode = null;\n  var errorMessage = null;\n  var authBytes = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').word16bs('errorMessageLength').tap(function (vars) {\n    errorCode = vars.errorCode;\n    this.buffer('errorMessage', vars.errorMessageLength);\n    errorMessage = vars.errorMessage.toString();\n  }).word32bs('authBytesLength').tap(function (vars) {\n    this.buffer('authBytes', vars.authBytesLength);\n    authBytes = vars.authBytes.toString();\n  });\n\n  if (errorCode == null || errorCode === 0) {\n    return authBytes;\n  }\n\n  return new SaslAuthenticationError(errorCode, errorMessage);\n}\n\nfunction encodeFetchRequest(maxWaitMs, minBytes) {\n  return function encodeFetchRequest(clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes);\n  };\n}\n\nfunction encodeFetchRequestV1(maxWaitMs, minBytes) {\n  return function encodeFetchRequest(clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, 1);\n  };\n}\n\nfunction encodeFetchRequestV2(maxWaitMs, minBytes) {\n  return function encodeFetchRequest(clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, 2);\n  };\n}\n\nfunction decodeTopics(decodePartitions) {\n  return function (end, vars) {\n    if (--vars.topicNum === 0) end();\n    this.word16bs('topic').tap(function (vars) {\n      this.buffer('topic', vars.topic);\n      vars.topic = vars.topic.toString();\n    }).word32bs('partitionNum').loop(decodePartitions);\n  };\n}\n\nfunction _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, version) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.fetch, version);\n  var topics = Object.keys(payloads);\n  request.Int32BE(REPLICA_ID).Int32BE(maxWaitMs).Int32BE(minBytes).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int32BE(p.maxBytes);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeFetchResponse(cb, maxTickMessages) {\n  return function (resp) {\n    return _decodeFetchResponse(resp, cb, maxTickMessages, 0);\n  };\n}\n\nfunction decodeFetchResponseV1(cb, maxTickMessages) {\n  return function (resp) {\n    return _decodeFetchResponse(resp, cb, maxTickMessages, 1);\n  };\n}\n\nfunction createGroupError(errorCode) {\n  if (errorCode == null || errorCode === 0) {\n    return null;\n  }\n\n  var error = ERROR_CODE[errorCode];\n\n  if (error in GROUP_ERROR) {\n    error = new GROUP_ERROR[error]('Kafka Error Code: ' + errorCode);\n  } else {\n    error = new Error(error);\n  }\n\n  error.errorCode = errorCode;\n  return error;\n}\n\nfunction _decodeFetchResponse(resp, cb, maxTickMessages, version) {\n  if (!cb) {\n    throw new Error('Missing callback');\n  }\n\n  var topics = {};\n  var events = [];\n  let eventCount = 0;\n  cb(null, 'processingfetch');\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').tap(function () {\n    if (version >= 1) {\n      this.word32bs('throttleTime');\n    }\n  }).word32bs('topicNum').loop(decodeTopics(decodePartitions)); // Parsing is all sync, but emitting events is async due to compression\n  // At this point, the enqueue chain should be populated in order, and at\n  // the end, the 'topics' map above should be fully populated.\n  // topics is not ready for use until all events are processed, as an async\n  // decompression may add more offsets to the topic map.\n\n  async.series(events, err => {\n    if (err) {\n      cb(err);\n    }\n\n    cb(null, 'done', topics);\n  });\n\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    let hadError = false;\n    this.word32bs('partition').word16bs('errorCode').word64bs('highWaterOffset').word32bs('messageSetSize').tap(function (vars) {\n      this.buffer('messageSet', vars.messageSetSize);\n      const errorCode = vars.errorCode;\n      const topic = vars.topic;\n      const partition = vars.partition;\n\n      if (errorCode !== 0) {\n        return events.push(next => {\n          const err = new Error(ERROR_CODE[errorCode]);\n          err.topic = topic;\n          err.partition = partition;\n          cb(err);\n          next();\n        });\n      }\n\n      const highWaterOffset = vars.highWaterOffset;\n      const {\n        magicByte\n      } = Binary.parse(vars.messageSet).skip(16).word8bs('magicByte').vars;\n\n      if (magicByte != null && magicByte > 1) {\n        return events.push(next => {\n          const err = new Error('Not a message set. Magic byte is ' + magicByte);\n          err.topic = topic;\n          err.partition = partition;\n          cb(err);\n          next();\n        });\n      }\n\n      decodeMessageSet(topic, partition, vars.messageSet, enqueuedTask => {\n        events.push(enqueuedTask);\n\n        if (maxTickMessages && ++eventCount >= maxTickMessages) {\n          eventCount = 0;\n          events.push(next => process.nextTick(next));\n        }\n      }, (err, data) => {\n        if (err) {\n          hadError = true;\n        } else if (hadError) {\n          return; // Once we've had an error on this partition, don't emit any more messages\n        }\n\n        if (!err && data) {\n          topics[topic][partition] = data.offset;\n          cb(null, 'message', data);\n        } else {\n          cb(err);\n        }\n      }, highWaterOffset, topics);\n    });\n  }\n}\n\nfunction decodeMessageSet(topic, partition, messageSet, enqueue, emit, highWaterOffset, topics, lastOffset) {\n  const messageSetSize = messageSet.length; // TODO: this is broken logic. It overwrites previous partitions HWO.\n  // Need to refactor this on next major API bump\n\n  topics[topic].highWaterOffset = highWaterOffset;\n  let innerMessages = [];\n\n  while (messageSet.length > 0) {\n    var cur = 8 + 4 + 4 + 1 + 1 + 4 + 4;\n    var partial = false;\n    Binary.parse(messageSet).word64bs('offset').word32bs('messageSize').tap(function (vars) {\n      if (vars.messageSize > messageSet.length - 12) {\n        partial = true;\n      }\n    }).word32bs('crc').word8bs('magicByte').word8bs('attributes').tap(function (vars) {\n      if (vars.magicByte > 0) {\n        this.word64bs('timestamp');\n        cur += 8;\n      }\n    }).word32bs('key').tap(function (vars) {\n      if (vars.key === -1) {\n        vars.key = null;\n        return;\n      }\n\n      cur += vars.key;\n      this.buffer('key', vars.key);\n    }).word32bs('value').tap(function (vars) {\n      if (vars.value !== -1) {\n        cur += vars.value;\n        this.buffer('value', vars.value);\n      } else {\n        vars.value = null;\n      }\n\n      if (vars.attributes === 0 && vars.messageSize > messageSetSize) {\n        const offset = vars.offset;\n        return enqueue(next => {\n          emit(new MessageSizeTooLarge({\n            topic: topic,\n            offset: offset,\n            partition: partition\n          }));\n          next(null);\n        });\n      }\n\n      if (!partial && vars.offset !== null) {\n        const offset = vars.offset;\n        const value = vars.value;\n        const key = vars.key;\n        const magicByte = vars.magicByte;\n        var codec = getCodec(vars.attributes);\n\n        if (!codec) {\n          const message = {\n            topic: topic,\n            value: value,\n            offset: offset,\n            partition: partition,\n            highWaterOffset: highWaterOffset,\n            key: key\n          };\n\n          if (vars.timestamp) {\n            message.timestamp = new Date(vars.timestamp);\n          }\n\n          if (lastOffset != null) {\n            // need to fix offset skipping enqueue till later\n            innerMessages.push(message);\n            return;\n          }\n\n          enqueue(next => {\n            emit(null, message);\n            next(null);\n          });\n          return;\n        }\n\n        enqueue(next => {\n          codec.decode(value, function (error, inlineMessageSet) {\n            if (error) {\n              emit(error);\n              next(null);\n              return;\n            }\n\n            decodeMessageSet(topic, partition, inlineMessageSet, cb => {\n              cb(_.noop);\n            }, emit, highWaterOffset, topics, magicByte === 1 ? offset : null); // Delay 1 tick as this isn't counted to max tick messages, give a breather\n\n            process.nextTick(() => next(null));\n          });\n        });\n      }\n    }); // Skip decoding binary left in the message set if partial message detected\n\n    if (partial) break;\n    messageSet = messageSet.slice(cur);\n  }\n\n  if (lastOffset != null && innerMessages.length) {\n    // contains inner messages, need to fix up offsets\n    let len = innerMessages.length - 1;\n\n    for (const message of innerMessages) {\n      const offset = lastOffset - len--;\n      message.offset = offset;\n      enqueue(next => {\n        emit(null, message);\n        next(null);\n      });\n    }\n  }\n}\n\nfunction encodeMetadataRequest(clientId, correlationId, topics) {\n  return _encodeMetadataRequest(clientId, correlationId, topics, 0);\n}\n\nfunction decodeMetadataResponse(resp) {\n  return _decodeMetadataResponse(resp, 0);\n}\n\nfunction encodeMetadataV1Request(clientId, correlationId, topics) {\n  return _encodeMetadataRequest(clientId, correlationId, topics, 1);\n}\n\nfunction decodeMetadataV1Response(resp) {\n  return _decodeMetadataResponse(resp, 1);\n}\n\nfunction _encodeMetadataRequest(clientId, correlationId, topics, version) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.metadata, version); // In version 0 an empty array will fetch all topics.\n  // In version 1+ a null value (-1) will fetch all topics. An empty array returns no topics.\n  // This adds support for maintaining version 0 behaviour in client regardless of kafka version ([] = fetch all topics).\n\n  if (version > 0 && (Array.isArray(topics) && topics.length === 0 || topics === null)) {\n    request.Int32BE(-1);\n    return encodeRequestWithLength(request.make());\n  } // Handle case where null is provided but version requested was 0 (not supported).\n  // Can happen if the api versions requests fails and fallback api support is used.\n\n\n  if (version === 0 && topics === null) {\n    topics = [];\n  }\n\n  request.Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _decodeMetadataResponse(resp, version) {\n  var brokers = {};\n  var out = {};\n  var topics = {};\n  var controllerId = -1;\n  var errors = [];\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('brokerNum').loop(decodeBrokers).tap(function (vars) {\n    if (version < 1) {\n      return;\n    }\n\n    this.word32bs('controllerId');\n    controllerId = vars.controllerId;\n  }).word32bs('topicNum').loop(_decodeTopics);\n\n  function decodeBrokers(end, vars) {\n    if (vars.brokerNum-- === 0) return end();\n    this.word32bs('nodeId').word16bs('host').tap(function (vars) {\n      this.buffer('host', vars.host);\n      vars.host = vars.host.toString();\n    }).word32bs('port').tap(function (vars) {\n      if (version < 1) {\n        return;\n      }\n\n      this.word16bs('rack');\n\n      if (vars.rack === -1) {\n        vars.rack = '';\n      } else {\n        this.buffer('rack', vars.rack);\n        vars.rack = vars.rack.toString();\n      }\n    }).tap(function (vars) {\n      brokers[vars.nodeId] = {\n        nodeId: vars.nodeId,\n        host: vars.host,\n        port: vars.port\n      };\n    });\n  }\n\n  function _decodeTopics(end, vars) {\n    if (vars.topicNum-- === 0) return end();\n    this.word16bs('topicError').word16bs('topic').tap(function (vars) {\n      this.buffer('topic', vars.topic);\n      vars.topic = vars.topic.toString();\n\n      if (version < 1) {\n        return;\n      }\n\n      this.word8bs('isInternal');\n    }).word32bs('partitionNum').tap(function (vars) {\n      if (vars.topicError !== 0) {\n        return errors.push(ERROR_CODE[vars.topicError]);\n      }\n\n      this.loop(decodePartitions);\n    });\n  }\n\n  function decodePartitions(end, vars) {\n    if (vars.partitionNum-- === 0) return end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word16bs('errorCode').word32bs('partition').word32bs('leader').word32bs('replicasNum').tap(function (vars) {\n      var buffer = this.buffer('replicas', vars.replicasNum * 4).vars.replicas;\n      this.vars.replicas = bufferToArray(vars.replicasNum, buffer);\n    }).word32bs('isrNum').tap(function (vars) {\n      var buffer = this.buffer('isr', vars.isrNum * 4).vars.isr;\n      this.vars.isr = bufferToArray(vars.isrNum, buffer);\n\n      if (vars.errorCode === 0 || vars.errorCode === 9) {\n        topics[vars.topic][vars.partition] = new PartitionMetadata(vars.topic, vars.partition, vars.leader, vars.replicas, vars.isr);\n      } else {\n        errors.push(ERROR_CODE[vars.errorCode]);\n      }\n    });\n  }\n\n  if (!_.isEmpty(errors)) out.error = errors;\n  out.metadata = topics;\n\n  if (version > 0) {\n    out.clusterMetadata = {\n      controllerId\n    };\n  }\n\n  return [brokers, out];\n}\n\nfunction encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs) {\n  return _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, 0);\n}\n\nfunction encodeCreateTopicRequestV1(clientId, correlationId, topics, timeoutMs) {\n  return _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, 1);\n}\n\nfunction _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, version) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.createTopics, version);\n  request.Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.topic.length).string(topic.topic); // When replica assignment is used, partitions and replication factor must be unset (-1)\n\n    if (topic.replicaAssignment) {\n      request.Int32BE(-1);\n      request.Int16BE(-1);\n    } else {\n      request.Int32BE(topic.partitions);\n      request.Int16BE(topic.replicationFactor);\n    }\n\n    if (topic.replicaAssignment) {\n      request.Int32BE(topic.replicaAssignment.length);\n      topic.replicaAssignment.forEach(function (replicaAssignment) {\n        request.Int32BE(replicaAssignment.partition);\n        request.Int32BE(replicaAssignment.replicas.length);\n        replicaAssignment.replicas.forEach(function (replica) {\n          request.Int32BE(replica);\n        });\n      });\n    } else {\n      request.Int32BE(0);\n    }\n\n    if (topic.configEntries) {\n      request.Int32BE(topic.configEntries.length);\n      topic.configEntries.forEach(function (config) {\n        request.Int16BE(config.name.length).string(config.name);\n\n        if (config.value == null) {\n          request.Int16BE(-1);\n        } else {\n          request.Int16BE(config.value.length).string(config.value);\n        }\n      });\n    } else {\n      request.Int32BE(0);\n    }\n  });\n  request.Int32BE(timeoutMs); // Validate only is 1+\n\n  if (version > 0) {\n    request.Int8(0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeCreateTopicResponse(resp) {\n  return _decodeCreateTopicResponse(resp, 0);\n}\n\nfunction decodeCreateTopicResponseV1(resp) {\n  return _decodeCreateTopicResponse(resp, 1);\n}\n\nfunction _decodeCreateTopicResponse(resp, version) {\n  var topicErrorResponses = [];\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics);\n\n  function decodeTopics(end, vars) {\n    if (vars.topicNum-- === 0) return end();\n    this.word16bs('topic').tap(function (vars) {\n      this.buffer('topic', vars.topic);\n      vars.topic = vars.topic.toString();\n    }).word16bs('errorCode').tap(function (vars) {\n      if (version > 0) {\n        this.word16bs('errorMessage');\n\n        if (vars.errorMessage !== -1) {\n          this.buffer('errorMessage', vars.errorMessage);\n          vars.errorMessage = vars.errorMessage.toString();\n        }\n      }\n\n      if (vars.errorCode === 0) {\n        return;\n      } // Errors that are not related to the actual topic(s) but the entire request\n      // (like timeout and sending the request to a non-controller)\n\n\n      if (vars.errorCode === 7 || vars.errorCode === 41) {\n        error = createGroupError(vars.errorCode);\n        return;\n      }\n\n      if (version > 0) {\n        topicErrorResponses.push({\n          topic: vars.topic,\n          error: vars.errorMessage\n        });\n      } else {\n        topicErrorResponses.push({\n          topic: vars.topic,\n          error: 'received error code ' + vars.errorCode + ' for topic'\n        });\n      }\n    });\n  }\n\n  return error || topicErrorResponses;\n}\n\nfunction bufferToArray(num, buffer) {\n  var ret = [];\n\n  for (var i = 0; i < num; i++) {\n    ret.push(Binary.parse(buffer).word32bs('r').vars.r);\n    buffer = buffer.slice(4);\n  }\n\n  return ret;\n}\n\nfunction encodeOffsetCommitRequest(group) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeOffsetCommitRequest(clientId, correlationId, group, payloads);\n  };\n}\n\nfunction encodeOffsetCommitV2Request(clientId, correlationId, group, generationId, memberId, payloads) {\n  return encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, 2);\n}\n\nfunction encodeOffsetCommitV1Request(clientId, correlationId, group, generationId, memberId, payloads) {\n  return encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, 1);\n}\n\nfunction encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, apiVersion) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetCommit, apiVersion);\n  var topics = Object.keys(payloads);\n  request.Int16BE(group.length).string(group).Int32BE(generationId).Int16BE(memberId.length).string(memberId).Int64BE(-1).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int16BE(p.metadata.length).string(p.metadata);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeOffsetCommitRequest(clientId, correlationId, group, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetCommit);\n  var topics = Object.keys(payloads);\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int16BE(p.metadata.length).string(p.metadata);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetCommitResponse(resp) {\n  var topics = {};\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorcode').tap(function (vars) {\n      topics[vars.topic]['partition'] = vars.partition;\n      topics[vars.topic]['errorCode'] = vars.errorcode;\n    });\n  }\n\n  return topics;\n}\n\nfunction encodeProduceRequest(requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 0);\n  };\n}\n\nfunction encodeProduceV1Request(requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 1);\n  };\n}\n\nfunction encodeProduceV2Request(requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 2);\n  };\n}\n\nfunction _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, apiVersion) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.produce, apiVersion);\n  var topics = Object.keys(payloads);\n  request.Int16BE(requireAcks).Int32BE(ackTimeoutMs).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var reqs = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n\n    request.Int32BE(reqs.length);\n    reqs.forEach(function (p) {\n      var messageSet = encodeMessageSet(p.messages, apiVersion === 2 ? 1 : 0);\n      request.Int32BE(p.partition).Int32BE(messageSet.length).string(messageSet);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction encodeMessageSet(messageSet, magic) {\n  var buffer = new Buffermaker();\n  messageSet.forEach(function (message) {\n    var msg = encodeMessage(message, magic);\n    buffer.Int64BE(0).Int32BE(msg.length).string(msg);\n  });\n  return buffer.make();\n}\n\nfunction encodeMessage(message, magic) {\n  if (magic == null) {\n    magic = 0;\n  }\n\n  var m = new Buffermaker().Int8(magic).Int8(message.attributes); // Add timestamp support for new messages\n\n  if (magic === 1) {\n    m.Int64BE(message.timestamp);\n  }\n\n  var key = message.key;\n  setValueOnBuffer(m, key);\n  var value = message.value;\n  setValueOnBuffer(m, value);\n  m = m.make();\n  var crc = crc32.signed(m);\n  return new Buffermaker().Int32BE(crc).string(m).make();\n}\n\nfunction setValueOnBuffer(buffer, value) {\n  if (value != null) {\n    if (Buffer.isBuffer(value)) {\n      buffer.Int32BE(value.length);\n    } else {\n      if (typeof value !== 'string') value = value.toString();\n      buffer.Int32BE(Buffer.byteLength(value));\n    }\n\n    buffer.string(value);\n  } else {\n    buffer.Int32BE(-1);\n  }\n}\n\nfunction decodeProduceV1Response(resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions)).word32bs('throttleTime');\n\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n\n  return error || topics;\n}\n\nfunction decodeProduceV2Response(resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions)).word32bs('throttleTime');\n\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').word64bs('timestamp').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n\n  return error || topics;\n}\n\nfunction decodeProduceResponse(resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n\n  return error || topics;\n}\n\nfunction encodeOffsetFetchRequest(group) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeOffsetFetchRequest(clientId, correlationId, group, payloads);\n  };\n}\n\nfunction encodeOffsetFetchV1Request(clientId, correlationId, group, payloads) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetFetch, 1);\n  var topics = Object.keys(payloads);\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic).Int32BE(payloads[topic].length);\n    payloads[topic].forEach(function (p) {\n      request.Int32BE(p);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeOffsetFetchRequest(clientId, correlationId, group, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetFetch);\n  var topics = Object.keys(payloads);\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetFetchResponse(resp) {\n  var topics = {};\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word64bs('offset').word16bs('metadata').tap(function (vars) {\n      if (vars.metadata === -1) {\n        return;\n      }\n\n      this.buffer('metadata', vars.metadata);\n    }).word16bs('errorCode').tap(function (vars) {\n      topics[vars.topic][vars.partition] = vars.errorCode === 0 ? vars.offset : -1;\n    });\n  }\n\n  return topics;\n}\n\nfunction decodeOffsetFetchV1Response(resp) {\n  var topics = {};\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word64bs('offset').word16bs('metadata').tap(function (vars) {\n      if (vars.metadata === -1) {\n        return;\n      }\n\n      this.buffer('metadata', vars.metadata);\n    }).word16bs('errorCode').tap(function (vars) {\n      if (vars.metadata.length === 0 && vars.offset === 0) {\n        topics[vars.topic][vars.partition] = -1;\n      } else {\n        topics[vars.topic][vars.partition] = vars.errorCode === 0 ? vars.offset : -1;\n      }\n    });\n  }\n\n  return topics;\n}\n\nfunction encodeOffsetRequest(clientId, correlationId, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offset);\n  var topics = Object.keys(payloads);\n  request.Int32BE(REPLICA_ID).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.time).Int32BE(p.maxNum);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetResponse(resp) {\n  var topics = {};\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word32bs('offsetNum').loop(decodeOffsets);\n  }\n\n  function decodeOffsets(end, vars) {\n    if (--vars.offsetNum <= 0) end();\n    topics[vars.topic][vars.partition] = topics[vars.topic][vars.partition] || [];\n    this.word64bs('offset').tap(function (vars) {\n      if (vars.offset != null) topics[vars.topic][vars.partition].push(vars.offset);\n    });\n  }\n\n  return topics;\n}\n\nfunction encodeGroupCoordinatorRequest(clientId, correlationId, groupId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.groupCoordinator);\n  request.Int16BE(groupId.length).string(groupId);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction encodeGroupHeartbeatRequest(clientId, correlationId, groupId, generationId, memberId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.heartbeat);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(generationId).Int16BE(memberId.length).string(memberId);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeGroupHeartbeatResponse(resp) {\n  var result = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    result = createGroupError(vars.errorCode);\n  });\n  return result;\n}\n\nfunction decodeGroupCoordinatorResponse(resp) {\n  var result;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').word32bs('coordinatorId').word16bs('coordinatorHost').tap(function (vars) {\n    this.buffer('coordinatorHost', vars.coordinatorHost);\n    vars.coordinatorHost = vars.coordinatorHost.toString();\n  }).word32bs('coordinatorPort').tap(function (vars) {\n    if (vars.errorCode !== 0) {\n      result = createGroupError(vars.errorCode);\n      return;\n    }\n\n    result = {\n      coordinatorHost: vars.coordinatorHost,\n      coordinatorPort: vars.coordinatorPort,\n      coordinatorId: vars.coordinatorId\n    };\n  });\n  return result;\n}\n/*\n\nProtocolType => \"consumer\"\n\nProtocolName => AssignmentStrategy\n  AssignmentStrategy => string\n\nProtocolMetadata => Version Subscription UserData\n  Version => int16\n  Subscription => [Topic]\n    Topic => string\n  UserData => bytes\n*/\n\n\nfunction encodeGroupProtocol(protocol) {\n  this.Int16BE(protocol.name.length).string(protocol.name).string(_encodeProtocolData(protocol));\n}\n\nfunction _encodeProtocolData(protocol) {\n  var protocolByte = new Buffermaker().Int16BE(protocol.version).Int32BE(protocol.subscription.length);\n  protocol.subscription.forEach(function (topic) {\n    protocolByte.Int16BE(topic.length).string(topic);\n  });\n\n  if (protocol.userData) {\n    var userDataStr = JSON.stringify(protocol.userData);\n    var data = Buffer.from(userDataStr, 'utf8');\n    protocolByte.Int32BE(data.length).string(data);\n  } else {\n    protocolByte.Int32BE(-1);\n  }\n\n  return encodeRequestWithLength(protocolByte.make());\n}\n\nfunction decodeSyncGroupResponse(resp) {\n  var result;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    result = createGroupError(vars.errorCode);\n  }).word32bs('memberAssignment').tap(function (vars) {\n    if (result) {\n      return;\n    }\n\n    this.buffer('memberAssignment', vars.memberAssignment);\n    result = decodeMemberAssignment(vars.memberAssignment);\n  });\n  return result;\n}\n/*\nMemberAssignment => Version PartitionAssignment\n  Version => int16\n  PartitionAssignment => [Topic [Partition]]\n    Topic => string\n    Partition => int32\n  UserData => bytes\n*/\n\n\nfunction decodeMemberAssignment(assignmentBytes) {\n  var assignment = {\n    partitions: {}\n  };\n  Binary.parse(assignmentBytes).word16bs('version').tap(function (vars) {\n    assignment.version = vars.version;\n  }).word32bs('partitionAssignment').loop(function (end, vars) {\n    if (vars.partitionAssignment-- === 0) return end();\n    var topic;\n    var partitions = [];\n    this.word16bs('topic').tap(function (vars) {\n      this.buffer('topic', vars.topic);\n      topic = vars.topic.toString();\n    }).word32bs('partitionsNum').loop(function (end, vars) {\n      if (vars.partitionsNum-- === 0) return end();\n      this.word32bs('partition').tap(function (vars) {\n        partitions.push(vars.partition);\n      });\n    });\n    assignment.partitions[topic] = partitions;\n  }).word32bs('userData').tap(function (vars) {\n    if (vars.userData == null || vars.userData === -1) {\n      return;\n    }\n\n    this.buffer('userData', vars.userData);\n\n    try {\n      assignment.userData = JSON.parse(vars.userData.toString());\n    } catch (e) {\n      assignment.userData = 'JSON Parse error';\n    }\n  });\n  return assignment;\n}\n\nfunction encodeSyncGroupRequest(clientId, correlationId, groupId, generationId, memberId, groupAssignment) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.syncGroup);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(generationId).Int16BE(memberId.length).string(memberId);\n\n  if (groupAssignment && groupAssignment.length) {\n    request.Int32BE(groupAssignment.length);\n    groupAssignment.forEach(function (assignment) {\n      request.Int16BE(assignment.memberId.length).string(assignment.memberId).string(_encodeMemberAssignment(assignment));\n    });\n  } else {\n    request.Int32BE(0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeMemberAssignment(assignment) {\n  var numberOfTopics = Object.keys(assignment.topicPartitions).length;\n  var assignmentByte = new Buffermaker().Int16BE(assignment.version).Int32BE(numberOfTopics);\n\n  for (var tp in assignment.topicPartitions) {\n    if (!assignment.topicPartitions.hasOwnProperty(tp)) {\n      continue;\n    }\n\n    var partitions = assignment.topicPartitions[tp];\n    assignmentByte.Int16BE(tp.length).string(tp).Int32BE(partitions.length);\n    partitions.forEach(function (partition) {\n      assignmentByte.Int32BE(partition);\n    });\n  }\n\n  if (assignment.userData) {\n    var userDataStr = JSON.stringify(assignment.userData);\n    var data = Buffer.from(userDataStr, 'utf8');\n    assignmentByte.Int32BE(data.length).string(data);\n  } else {\n    assignmentByte.Int32BE(-1);\n  }\n\n  return encodeRequestWithLength(assignmentByte.make());\n}\n\nfunction encodeLeaveGroupRequest(clientId, correlationId, groupId, memberId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.leaveGroup);\n  request.Int16BE(groupId.length).string(groupId).Int16BE(memberId.length).string(memberId);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeLeaveGroupResponse(resp) {\n  var error = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    error = createGroupError(vars.errorCode);\n  });\n  return error;\n} // {\n//   name: '', // string\n//   subscription: [/* topics */],\n//   version: 0, // integer\n//   userData: {} //arbitary\n// }\n\n/*\nJoinGroupRequest => GroupId SessionTimeout MemberId ProtocolType GroupProtocols\n  GroupId => string\n  SessionTimeout => int32\n  MemberId => string\n  ProtocolType => string\n  GroupProtocols => [ProtocolName ProtocolMetadata]\n    ProtocolName => string\n    ProtocolMetadata => bytes\n*/\n\n\nfunction encodeJoinGroupRequest(clientId, correlationId, groupId, memberId, sessionTimeout, groupProtocols) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.joinGroup);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(sessionTimeout).Int16BE(memberId.length).string(memberId).Int16BE(GROUPS_PROTOCOL_TYPE.length).string(GROUPS_PROTOCOL_TYPE).Int32BE(groupProtocols.length);\n  groupProtocols.forEach(encodeGroupProtocol.bind(request));\n  return encodeRequestWithLength(request.make());\n}\n/*\n\nv0 and v1 supported in 0.9.0 and greater\nJoinGroupResponse => ErrorCode GenerationId GroupProtocol LeaderId MemberId Members\n  ErrorCode => int16\n  GenerationId => int32\n  GroupProtocol => string\n  LeaderId => string\n  MemberId => string\n  Members => [MemberId MemberMetadata]\n    MemberId => string\n    MemberMetadata => bytes\n*/\n\n\nfunction decodeJoinGroupResponse(resp) {\n  var result = {\n    members: []\n  };\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    error = createGroupError(vars.errorCode);\n  }).word32bs('generationId').tap(function (vars) {\n    result.generationId = vars.generationId;\n  }).word16bs('groupProtocol').tap(function (vars) {\n    this.buffer('groupProtocol', vars.groupProtocol);\n    result.groupProtocol = vars.groupProtocol = vars.groupProtocol.toString();\n  }).word16bs('leaderId').tap(function (vars) {\n    this.buffer('leaderId', vars.leaderId);\n    result.leaderId = vars.leaderId = vars.leaderId.toString();\n  }).word16bs('memberId').tap(function (vars) {\n    this.buffer('memberId', vars.memberId);\n    result.memberId = vars.memberId = vars.memberId.toString();\n  }).word32bs('memberNum').loop(function (end, vars) {\n    if (error) {\n      return end();\n    }\n\n    if (vars.memberNum-- === 0) return end();\n    var memberMetadata;\n    this.word16bs('groupMemberId').tap(function (vars) {\n      this.buffer('groupMemberId', vars.groupMemberId);\n      vars.memberId = vars.groupMemberId.toString();\n    }).word32bs('memberMetadata').tap(function (vars) {\n      if (vars.memberMetadata > -1) {\n        this.buffer('memberMetadata', vars.memberMetadata);\n        memberMetadata = decodeGroupData(this.vars.memberMetadata);\n        memberMetadata.id = vars.memberId;\n        result.members.push(memberMetadata);\n      }\n    });\n  });\n  return error || result;\n}\n\nfunction decodeGroupData(resp) {\n  var topics = [];\n  var parsed = Binary.parse(resp).word16bs('version').word32bs('subscriptionNum').loop(function decodeSubscription(end, vars) {\n    if (vars.subscriptionNum-- === 0) return end();\n    this.word16bs('topic').tap(function () {\n      this.buffer('topic', vars.topic);\n      topics.push(vars.topic.toString());\n    });\n  }).word32bs('userData').tap(function (vars) {\n    if (vars.userData === -1) {\n      vars.userData = undefined;\n      return;\n    }\n\n    this.buffer('userData', vars.userData);\n\n    try {\n      vars.userData = JSON.parse(vars.userData.toString());\n    } catch (error) {\n      vars.userData = 'JSON parse error';\n    }\n  }).vars;\n  return {\n    subscription: topics,\n    version: parsed.version,\n    userData: parsed.userData\n  };\n}\n\nfunction encodeDescribeGroups(clientId, correlationId, groups) {\n  const request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.describeGroups);\n  request.Int32BE(groups.length);\n  groups.forEach(groupId => {\n    request.Int16BE(groupId.length).string(groupId);\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeDescribeGroups(resp) {\n  let results = {};\n  let error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('describeNum').loop(decodeDescriptions);\n\n  function decodeDescriptions(end, vars) {\n    if (vars.describeNum-- === 0) return end();\n    let described = {\n      members: []\n    };\n    this.word16bs('errorCode').tap(vars => {\n      error = createGroupError(vars.errorCode);\n    }).word16bs('groupId').tap(vars => {\n      this.buffer('groupId', vars.groupId);\n      described.groupId = vars.groupId.toString();\n    }).word16bs('state').tap(vars => {\n      this.buffer('state', vars.state);\n      described.state = vars.state.toString();\n    }).word16bs('protocolType').tap(vars => {\n      this.buffer('protocolType', vars.protocolType);\n      described.protocolType = vars.protocolType.toString();\n    }).word16bs('protocol').tap(vars => {\n      this.buffer('protocol', vars.protocol);\n      described.protocol = vars.protocol.toString(); // keep this for error cases\n\n      results[described.groupId] = described;\n    }).word32bs('membersNum').loop(function decodeGroupMembers(end, vars) {\n      if (vars.membersNum-- === 0) return end();\n      let member = {};\n      this.word16bs('memberId').tap(vars => {\n        this.buffer('memberId', vars.memberId);\n        member.memberId = vars.memberId.toString();\n      }).word16bs('clientId').tap(vars => {\n        this.buffer('clientId', vars.clientId);\n        member.clientId = vars.clientId.toString();\n      }).word16bs('clientHost').tap(vars => {\n        this.buffer('clientHost', vars.clientHost);\n        member.clientHost = vars.clientHost.toString();\n      }).word32bs('memberMetadata').tap(vars => {\n        if (vars.memberMetadata > -1) {\n          this.buffer('memberMetadata', vars.memberMetadata);\n          let memberMetadata = decodeGroupData(vars.memberMetadata);\n          memberMetadata.id = member.memberId;\n          member.memberMetadata = memberMetadata;\n        }\n      }).word32bs('memberAssignment').tap(vars => {\n        this.buffer('memberAssignment', vars.memberAssignment);\n        member.memberAssignment = decodeMemberAssignment(vars.memberAssignment);\n        described.members.push(member);\n        results[described.groupId] = described;\n      });\n    });\n  }\n\n  return error || results;\n}\n\nfunction encodeListGroups(clientId, correlationId) {\n  return encodeRequestWithLength(encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.listGroups).make());\n}\n\nfunction decodeListGroups(resp) {\n  let groups = {};\n  let error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(vars => {\n    error = createGroupError(vars.errorCode);\n  }).word32bs('groupNum').loop(function (end, vars) {\n    if (vars.groupNum-- === 0) return end();\n    this.word16bs('groupId').tap(function (vars) {\n      this.buffer('groupId', vars.groupId);\n      vars.groupId = vars.groupId.toString();\n    }).word16bs('protocolType').tap(function (vars) {\n      this.buffer('protocolType', vars.protocolType);\n      groups[vars.groupId] = vars.protocolType.toString();\n    });\n  });\n  return error || groups;\n}\n\nfunction encodeVersionsRequest(clientId, correlationId) {\n  return encodeRequestWithLength(encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.apiVersions).make());\n}\n\nfunction decodeVersionsResponse(resp) {\n  const MAX_SUPPORT_VERSION = require('./protocolVersions').maxSupport;\n\n  const versions = Object.create(null);\n  let error = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    error = createGroupError(vars.errorCode);\n  }).word32bs('apiNum').loop(function (end, vars) {\n    if (vars.apiNum-- === 0 || error) return end();\n    let apiKey, minVersion, maxVersion;\n    this.word16bs('apiKey').tap(vars => {\n      apiKey = vars.apiKey;\n    }).word16bs('minVersion').tap(vars => {\n      minVersion = vars.minVersion;\n    }).word16bs('maxVersion').tap(vars => {\n      maxVersion = vars.maxVersion;\n    });\n    const apiName = apiKey in API_KEY_TO_NAME ? API_KEY_TO_NAME[apiKey] : apiKey;\n    versions[apiName] = {\n      min: minVersion,\n      max: maxVersion,\n      usable: MAX_SUPPORT_VERSION[apiName] != null ? Math.min(MAX_SUPPORT_VERSION[apiName], maxVersion) : false\n    };\n  });\n  return error || versions;\n}\n\nfunction encodeDescribeConfigsRequest(clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 0);\n}\n\nfunction encodeDescribeConfigsRequestV1(clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 1);\n}\n\nfunction encodeDescribeConfigsRequestV2(clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 2);\n}\n\nfunction _encodeDescribeConfigsRequest(clientId, correlationId, payload, apiVersion) {\n  let request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.describeConfigs, apiVersion);\n  const resources = payload.resources;\n  request.Int32BE(resources.length);\n  resources.forEach(function (resource) {\n    request.Int8(resource.resourceType);\n    request.Int16BE(resource.resourceName.length);\n    request.string(resource.resourceName);\n\n    if (resource.configNames === null || Array.isArray(resource.configNames) && resource.configNames.length === 0) {\n      request.Int32BE(-1); // -1 will fetch all config entries for the resource\n    } else {\n      request.Int32BE(resource.configNames.length);\n      resource.configNames.forEach(function (configName) {\n        request.Int16BE(configName.length).string(configName);\n      });\n    }\n  });\n\n  if (apiVersion > 0) {\n    request.Int8(payload.includeSynonyms || 0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeDescribeConfigsResponse(resp) {\n  return _decodeDescribeConfigsResponse(resp, 0);\n}\n\nfunction decodeDescribeConfigsResponseV1(resp) {\n  return _decodeDescribeConfigsResponse(resp, 1);\n}\n\nfunction decodeDescribeConfigsResponseV2(resp) {\n  return _decodeDescribeConfigsResponse(resp, 2);\n}\n\nfunction _decodeDescribeConfigsResponse(resp, apiVersion) {\n  let resources = [];\n  let error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('throttleTime').word32bs('resourceNum').loop(decodeResources);\n\n  function decodeResources(end, vars) {\n    if (vars.resourceNum-- === 0) return end();\n    let resource = {\n      configEntries: []\n    };\n    this.word16bs('errorCode').word16bs('errorMessage').tap(function (vars) {\n      if (vars.errorCode !== 0) {\n        if (vars.errorMessage === -1) {\n          vars.errorMessage = '';\n        } else {\n          this.buffer('errorMessage', vars.errorMessage);\n          vars.errorMessage = vars.errorMessage.toString();\n        }\n\n        error = vars.errorCode === 42 ? new InvalidRequestError(vars.errorMessage) : createGroupError(vars.errorCode);\n      }\n    }).word8bs('resourceType').word16bs('resourceName').tap(function (vars) {\n      this.buffer('resourceName', vars.resourceName);\n      resource.resourceType = vars.resourceType.toString();\n      resource.resourceName = vars.resourceName.toString();\n    }).word32bs('configEntriesNum').loop(decodeConfigEntries).tap(function () {\n      resources.push(resource);\n    });\n\n    function decodeConfigEntries(end, vars) {\n      if (vars.configEntriesNum === -1 || vars.configEntriesNum-- === 0) return end();\n      let configEntry = {\n        synonyms: []\n      };\n      this.word16bs('configName').tap(function (vars) {\n        this.buffer('configName', vars.configName);\n        configEntry.configName = vars.configName.toString();\n      }).word16bs('configValue').tap(function (vars) {\n        if (vars.configValue === -1) {\n          vars.configValue = '';\n        } else {\n          this.buffer('configValue', vars.configValue);\n          vars.configValue = vars.configValue.toString();\n        }\n\n        configEntry.configValue = vars.configValue;\n      }).word8bs('readOnly').word8bs('configSource').word8bs('isSensitive').tap(function () {\n        if (apiVersion > 0) {\n          this.word32bs('configSynonymsNum');\n          this.loop(decodeConfigSynonyms);\n        }\n      }).tap(function (vars) {\n        configEntry.readOnly = Boolean(vars.readOnly);\n        configEntry.configSource = vars.configSource;\n        configEntry.isSensitive = Boolean(vars.isSensitive);\n        resource.configEntries.push(configEntry);\n      });\n\n      function decodeConfigSynonyms(end, vars) {\n        if (vars.configSynonymsNum === -1 || vars.configSynonymsNum-- === 0) return end();\n        let configSynonym = {};\n        this.word16bs('configSynonymName').tap(function (vars) {\n          this.buffer('configSynonymName', vars.configSynonymName);\n          configSynonym.configSynonymName = vars.configSynonymName.toString();\n        }).word16bs('configSynonymValue').tap(function (vars) {\n          if (vars.configSynonymValue === -1) {\n            configSynonym.configSynonymValue = '';\n          } else {\n            this.buffer('configSynonymValue', vars.configSynonymValue);\n            configSynonym.configSynonymValue = vars.configSynonymValue.toString();\n          }\n        }).word8bs('configSynonymSource').tap(function () {\n          configSynonym.configSynonymSource = vars.configSynonymSource.toString();\n          configEntry.synonyms.push(configSynonym);\n        });\n      }\n    }\n  }\n\n  return error || resources;\n}\n\nexports.encodeSaslHandshakeRequest = encodeSaslHandshakeRequest;\nexports.decodeSaslHandshakeResponse = decodeSaslHandshakeResponse;\nexports.encodeSaslAuthenticateRequest = encodeSaslAuthenticateRequest;\nexports.decodeSaslAuthenticateResponse = decodeSaslAuthenticateResponse;\nexports.encodeFetchRequest = encodeFetchRequest;\nexports.decodeFetchResponse = decodeFetchResponse;\nexports.encodeFetchRequestV1 = encodeFetchRequestV1;\nexports.decodeFetchResponseV1 = decodeFetchResponseV1;\nexports.encodeFetchRequestV2 = encodeFetchRequestV2;\nexports.encodeOffsetCommitRequest = encodeOffsetCommitRequest;\nexports.encodeOffsetCommitV1Request = encodeOffsetCommitV1Request;\nexports.encodeOffsetCommitV2Request = encodeOffsetCommitV2Request;\nexports.decodeOffsetCommitResponse = decodeOffsetCommitResponse;\nexports.encodeOffsetFetchRequest = encodeOffsetFetchRequest;\nexports.encodeOffsetFetchV1Request = encodeOffsetFetchV1Request;\nexports.decodeOffsetFetchResponse = decodeOffsetFetchResponse;\nexports.decodeOffsetFetchV1Response = decodeOffsetFetchV1Response;\nexports.encodeMetadataRequest = encodeMetadataRequest;\nexports.decodeMetadataResponse = decodeMetadataResponse;\nexports.encodeMetadataV1Request = encodeMetadataV1Request;\nexports.decodeMetadataV1Response = decodeMetadataV1Response;\nexports.encodeCreateTopicRequest = encodeCreateTopicRequest;\nexports.encodeCreateTopicRequestV1 = encodeCreateTopicRequestV1;\nexports.decodeCreateTopicResponse = decodeCreateTopicResponse;\nexports.decodeCreateTopicResponseV1 = decodeCreateTopicResponseV1;\nexports.encodeProduceRequest = encodeProduceRequest;\nexports.encodeProduceV1Request = encodeProduceV1Request;\nexports.encodeProduceV2Request = encodeProduceV2Request;\nexports.decodeProduceResponse = decodeProduceResponse;\nexports.decodeProduceV1Response = decodeProduceV1Response;\nexports.decodeProduceV2Response = decodeProduceV2Response;\nexports.encodeOffsetRequest = encodeOffsetRequest;\nexports.decodeOffsetResponse = decodeOffsetResponse;\nexports.encodeMessageSet = encodeMessageSet;\nexports.encodeJoinGroupRequest = encodeJoinGroupRequest;\nexports.decodeJoinGroupResponse = decodeJoinGroupResponse;\nexports.encodeGroupCoordinatorRequest = encodeGroupCoordinatorRequest;\nexports.decodeGroupCoordinatorResponse = decodeGroupCoordinatorResponse;\nexports.encodeGroupHeartbeatRequest = encodeGroupHeartbeatRequest;\nexports.decodeGroupHeartbeatResponse = decodeGroupHeartbeatResponse;\nexports.encodeSyncGroupRequest = encodeSyncGroupRequest;\nexports.decodeSyncGroupResponse = decodeSyncGroupResponse;\nexports.encodeLeaveGroupRequest = encodeLeaveGroupRequest;\nexports.decodeLeaveGroupResponse = decodeLeaveGroupResponse;\nexports.encodeDescribeGroups = encodeDescribeGroups;\nexports.decodeDescribeGroups = decodeDescribeGroups;\nexports.encodeListGroups = encodeListGroups;\nexports.decodeListGroups = decodeListGroups;\nexports.encodeVersionsRequest = encodeVersionsRequest;\nexports.decodeVersionsResponse = decodeVersionsResponse;\nexports.encodeDescribeConfigsRequest = encodeDescribeConfigsRequest;\nexports.encodeDescribeConfigsRequestV1 = encodeDescribeConfigsRequestV1;\nexports.encodeDescribeConfigsRequestV2 = encodeDescribeConfigsRequestV2;\nexports.decodeDescribeConfigsResponse = decodeDescribeConfigsResponse;\nexports.decodeDescribeConfigsResponseV1 = decodeDescribeConfigsResponseV1;\nexports.decodeDescribeConfigsResponseV2 = decodeDescribeConfigsResponseV2;","map":{"version":3,"sources":["/home/jerem/Bureau/Cours/IWA/stopcovid-front/node_modules/kafka-node/lib/protocol/protocol.js"],"names":["Binary","require","Buffermaker","_","crc32","protocol","getCodec","REQUEST_TYPE","ERROR_CODE","GROUP_ERROR","PartitionMetadata","API_KEY_TO_NAME","invert","MessageSizeTooLarge","SaslAuthenticationError","InvalidRequestError","async","API_VERSION","REPLICA_ID","GROUPS_PROTOCOL_TYPE","groupByTopic","payloads","reduce","out","p","topic","partition","encodeRequestWithLength","request","Int32BE","length","string","make","encodeRequestHeader","clientId","correlationId","apiKey","apiVersion","Int16BE","encodeSaslHandshakeRequest","mechanism","saslHandshake","toUpperCase","decodeSaslHandshakeResponse","resp","mechanisms","errorCode","parse","word32bs","word16bs","tap","vars","loop","_decodeMechanisms","end","numMechanisms","word16be","buffer","mechanismSize","push","encodeSaslAuthenticateRequest","saslOpts","username","password","authBytes","Int8","Error","saslAuthenticate","decodeSaslAuthenticateResponse","errorMessage","errorMessageLength","toString","authBytesLength","encodeFetchRequest","maxWaitMs","minBytes","_encodeFetchRequest","encodeFetchRequestV1","encodeFetchRequestV2","decodeTopics","decodePartitions","topicNum","version","fetch","topics","Object","keys","forEach","partitions","toPairs","map","pairs","Int64BE","offset","maxBytes","decodeFetchResponse","cb","maxTickMessages","_decodeFetchResponse","decodeFetchResponseV1","createGroupError","error","events","eventCount","series","err","partitionNum","hadError","word64bs","messageSetSize","next","highWaterOffset","magicByte","messageSet","skip","word8bs","decodeMessageSet","enqueuedTask","process","nextTick","data","enqueue","emit","lastOffset","innerMessages","cur","partial","messageSize","key","value","attributes","codec","message","timestamp","Date","decode","inlineMessageSet","noop","slice","len","encodeMetadataRequest","_encodeMetadataRequest","decodeMetadataResponse","_decodeMetadataResponse","encodeMetadataV1Request","decodeMetadataV1Response","metadata","Array","isArray","brokers","controllerId","errors","decodeBrokers","_decodeTopics","brokerNum","host","rack","nodeId","port","topicError","replicasNum","replicas","bufferToArray","isrNum","isr","leader","isEmpty","clusterMetadata","encodeCreateTopicRequest","timeoutMs","_encodeCreateTopicRequest","encodeCreateTopicRequestV1","createTopics","replicaAssignment","replicationFactor","replica","configEntries","config","name","decodeCreateTopicResponse","_decodeCreateTopicResponse","decodeCreateTopicResponseV1","topicErrorResponses","num","ret","i","r","encodeOffsetCommitRequest","group","_encodeOffsetCommitRequest","encodeOffsetCommitV2Request","generationId","memberId","encodeOffsetCommitGenericRequest","encodeOffsetCommitV1Request","offsetCommit","decodeOffsetCommitResponse","errorcode","encodeProduceRequest","requireAcks","ackTimeoutMs","_encodeProduceRequest","encodeProduceV1Request","encodeProduceV2Request","produce","reqs","encodeMessageSet","messages","magic","msg","encodeMessage","m","setValueOnBuffer","crc","signed","Buffer","isBuffer","byteLength","decodeProduceV1Response","decodeProduceV2Response","decodeProduceResponse","encodeOffsetFetchRequest","_encodeOffsetFetchRequest","encodeOffsetFetchV1Request","offsetFetch","decodeOffsetFetchResponse","decodeOffsetFetchV1Response","encodeOffsetRequest","time","maxNum","decodeOffsetResponse","decodeOffsets","offsetNum","encodeGroupCoordinatorRequest","groupId","groupCoordinator","encodeGroupHeartbeatRequest","heartbeat","decodeGroupHeartbeatResponse","result","decodeGroupCoordinatorResponse","coordinatorHost","coordinatorPort","coordinatorId","encodeGroupProtocol","_encodeProtocolData","protocolByte","subscription","userData","userDataStr","JSON","stringify","from","decodeSyncGroupResponse","memberAssignment","decodeMemberAssignment","assignmentBytes","assignment","partitionAssignment","partitionsNum","e","encodeSyncGroupRequest","groupAssignment","syncGroup","_encodeMemberAssignment","numberOfTopics","topicPartitions","assignmentByte","tp","hasOwnProperty","encodeLeaveGroupRequest","leaveGroup","decodeLeaveGroupResponse","encodeJoinGroupRequest","sessionTimeout","groupProtocols","joinGroup","bind","decodeJoinGroupResponse","members","groupProtocol","leaderId","memberNum","memberMetadata","groupMemberId","decodeGroupData","id","parsed","decodeSubscription","subscriptionNum","undefined","encodeDescribeGroups","groups","describeGroups","decodeDescribeGroups","results","decodeDescriptions","describeNum","described","state","protocolType","decodeGroupMembers","membersNum","member","clientHost","encodeListGroups","listGroups","decodeListGroups","groupNum","encodeVersionsRequest","apiVersions","decodeVersionsResponse","MAX_SUPPORT_VERSION","maxSupport","versions","create","apiNum","minVersion","maxVersion","apiName","min","max","usable","Math","encodeDescribeConfigsRequest","payload","_encodeDescribeConfigsRequest","encodeDescribeConfigsRequestV1","encodeDescribeConfigsRequestV2","describeConfigs","resources","resource","resourceType","resourceName","configNames","configName","includeSynonyms","decodeDescribeConfigsResponse","_decodeDescribeConfigsResponse","decodeDescribeConfigsResponseV1","decodeDescribeConfigsResponseV2","decodeResources","resourceNum","decodeConfigEntries","configEntriesNum","configEntry","synonyms","configValue","decodeConfigSynonyms","readOnly","Boolean","configSource","isSensitive","configSynonymsNum","configSynonym","configSynonymName","configSynonymValue","configSynonymSource","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Binary = require('binary');\nvar Buffermaker = require('buffermaker');\nvar _ = require('lodash');\nvar crc32 = require('buffer-crc32');\nvar protocol = require('./protocol_struct');\nvar getCodec = require('../codec');\nvar REQUEST_TYPE = protocol.REQUEST_TYPE;\nvar ERROR_CODE = protocol.ERROR_CODE;\nvar GROUP_ERROR = protocol.GROUP_ERROR;\nvar PartitionMetadata = protocol.PartitionMetadata;\nconst API_KEY_TO_NAME = _.invert(REQUEST_TYPE);\nconst MessageSizeTooLarge = require('../errors/MessageSizeTooLargeError');\nconst SaslAuthenticationError = require('../errors/SaslAuthenticationError');\nconst InvalidRequestError = require('../errors/InvalidRequestError');\nconst async = require('async');\n\nvar API_VERSION = 0;\nvar REPLICA_ID = -1;\nvar GROUPS_PROTOCOL_TYPE = 'consumer';\n\nfunction groupByTopic (payloads) {\n  return payloads.reduce(function (out, p) {\n    out[p.topic] = out[p.topic] || {};\n    out[p.topic][p.partition] = p;\n    return out;\n  }, {});\n}\n\nfunction encodeRequestWithLength (request) {\n  return new Buffermaker().Int32BE(request.length).string(request).make();\n}\n\nfunction encodeRequestHeader (clientId, correlationId, apiKey, apiVersion) {\n  return new Buffermaker()\n    .Int16BE(apiKey)\n    .Int16BE(apiVersion || API_VERSION)\n    .Int32BE(correlationId)\n    .Int16BE(clientId.length)\n    .string(clientId);\n}\n\nfunction encodeSaslHandshakeRequest (clientId, correlationId, apiVersion, mechanism) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.saslHandshake, apiVersion);\n  request.Int16BE(mechanism.length).string(mechanism.toUpperCase());\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeSaslHandshakeResponse (resp) {\n  var mechanisms = [];\n  var errorCode = null;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(function (vars) {\n      errorCode = vars.errorCode;\n    })\n    .word32bs('numMechanisms')\n    .loop(_decodeMechanisms);\n\n  function _decodeMechanisms (end, vars) {\n    if (vars.numMechanisms-- === 0) {\n      return end();\n    }\n    this\n      .word16be('mechanismSize')\n      .tap(function (vars) {\n        this.buffer('mechanism', vars.mechanismSize);\n        mechanisms.push(vars.mechanism);\n      });\n  }\n  if (errorCode == null || errorCode === 0) {\n    return mechanisms;\n  }\n  return new SaslAuthenticationError(errorCode, 'Handshake failed.');\n}\n\nfunction encodeSaslAuthenticateRequest (clientId, correlationId, apiVersion, saslOpts) {\n  //\n  // FIXME From the Kafka protocol docs:\n  //       If SaslHandshakeRequest version is v0, a series of SASL client and server tokens\n  //       corresponding to the mechanism are sent as opaque packets without wrapping the\n  //       messages with Kafka protocol headers. If SaslHandshakeRequest version is v1, the\n  //       SaslAuthenticate request/response are used, where the actual SASL tokens are\n  //       wrapped in the Kafka protocol.\n  //\n  var username = saslOpts.username || '';\n  var password = saslOpts.password || '';\n  var authBytes = null;\n  if (saslOpts.mechanism.toUpperCase() === 'PLAIN') {\n    authBytes =\n      (new Buffermaker())\n        .string(username).Int8(0)\n        .string(username).Int8(0)\n        .string(password)\n        .make();\n  } else {\n    return new Error('unsupported SASL auth type: ' + saslOpts.mechanism.toUpperCase());\n  }\n\n  if (apiVersion === 0) {\n    return encodeRequestWithLength(authBytes);\n  }\n\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.saslAuthenticate, 0);\n  request.Int32BE(authBytes.length).string(authBytes);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeSaslAuthenticateResponse (resp) {\n  var errorCode = null;\n  var errorMessage = null;\n  var authBytes = null;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .word16bs('errorMessageLength')\n    .tap(function (vars) {\n      errorCode = vars.errorCode;\n      this.buffer('errorMessage', vars.errorMessageLength);\n      errorMessage = vars.errorMessage.toString();\n    })\n    .word32bs('authBytesLength')\n    .tap(function (vars) {\n      this.buffer('authBytes', vars.authBytesLength);\n      authBytes = vars.authBytes.toString();\n    });\n  if (errorCode == null || errorCode === 0) {\n    return authBytes;\n  }\n  return new SaslAuthenticationError(errorCode, errorMessage);\n}\n\nfunction encodeFetchRequest (maxWaitMs, minBytes) {\n  return function encodeFetchRequest (clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes);\n  };\n}\n\nfunction encodeFetchRequestV1 (maxWaitMs, minBytes) {\n  return function encodeFetchRequest (clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, 1);\n  };\n}\n\nfunction encodeFetchRequestV2 (maxWaitMs, minBytes) {\n  return function encodeFetchRequest (clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, 2);\n  };\n}\n\nfunction decodeTopics (decodePartitions) {\n  return function (end, vars) {\n    if (--vars.topicNum === 0) end();\n    this.word16bs('topic')\n      .tap(function (vars) {\n        this.buffer('topic', vars.topic);\n        vars.topic = vars.topic.toString();\n      })\n      .word32bs('partitionNum')\n      .loop(decodePartitions);\n  };\n}\n\nfunction _encodeFetchRequest (clientId, correlationId, payloads, maxWaitMs, minBytes, version) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.fetch, version);\n  var topics = Object.keys(payloads);\n\n  request.Int32BE(REPLICA_ID).Int32BE(maxWaitMs).Int32BE(minBytes).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int32BE(p.maxBytes);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeFetchResponse (cb, maxTickMessages) {\n  return function (resp) {\n    return _decodeFetchResponse(resp, cb, maxTickMessages, 0);\n  };\n}\n\nfunction decodeFetchResponseV1 (cb, maxTickMessages) {\n  return function (resp) {\n    return _decodeFetchResponse(resp, cb, maxTickMessages, 1);\n  };\n}\n\nfunction createGroupError (errorCode) {\n  if (errorCode == null || errorCode === 0) {\n    return null;\n  }\n\n  var error = ERROR_CODE[errorCode];\n  if (error in GROUP_ERROR) {\n    error = new GROUP_ERROR[error]('Kafka Error Code: ' + errorCode);\n  } else {\n    error = new Error(error);\n  }\n  error.errorCode = errorCode;\n  return error;\n}\n\nfunction _decodeFetchResponse (resp, cb, maxTickMessages, version) {\n  if (!cb) {\n    throw new Error('Missing callback');\n  }\n\n  var topics = {};\n  var events = [];\n  let eventCount = 0;\n\n  cb(null, 'processingfetch');\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .tap(function () {\n      if (version >= 1) {\n        this.word32bs('throttleTime');\n      }\n    })\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  // Parsing is all sync, but emitting events is async due to compression\n  // At this point, the enqueue chain should be populated in order, and at\n  // the end, the 'topics' map above should be fully populated.\n  // topics is not ready for use until all events are processed, as an async\n  // decompression may add more offsets to the topic map.\n  async.series(events, (err) => {\n    if (err) {\n      cb(err);\n    }\n    cb(null, 'done', topics);\n  });\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    let hadError = false;\n    this.word32bs('partition')\n      .word16bs('errorCode')\n      .word64bs('highWaterOffset')\n      .word32bs('messageSetSize')\n      .tap(function (vars) {\n        this.buffer('messageSet', vars.messageSetSize);\n        const errorCode = vars.errorCode;\n        const topic = vars.topic;\n        const partition = vars.partition;\n\n        if (errorCode !== 0) {\n          return events.push((next) => {\n            const err = new Error(ERROR_CODE[errorCode]);\n            err.topic = topic;\n            err.partition = partition;\n            cb(err);\n            next();\n          });\n        }\n\n        const highWaterOffset = vars.highWaterOffset;\n        const { magicByte } = Binary.parse(vars.messageSet).skip(16).word8bs('magicByte').vars;\n\n        if (magicByte != null && magicByte > 1) {\n          return events.push((next) => {\n            const err = new Error('Not a message set. Magic byte is ' + magicByte);\n            err.topic = topic;\n            err.partition = partition;\n            cb(err);\n            next();\n          });\n        }\n\n        decodeMessageSet(\n          topic,\n          partition,\n          vars.messageSet,\n          (enqueuedTask) => {\n            events.push(enqueuedTask);\n            if (maxTickMessages && ++eventCount >= maxTickMessages) {\n              eventCount = 0;\n              events.push((next) => process.nextTick(next));\n            }\n          },\n          (err, data) => {\n            if (err) {\n              hadError = true;\n            } else if (hadError) {\n              return; // Once we've had an error on this partition, don't emit any more messages\n            }\n            if (!err && data) {\n              topics[topic][partition] = data.offset;\n\n              cb(null, 'message', data);\n            } else {\n              cb(err);\n            }\n          },\n          highWaterOffset,\n          topics\n        );\n      });\n  }\n}\n\nfunction decodeMessageSet (topic, partition, messageSet, enqueue, emit, highWaterOffset, topics, lastOffset) {\n  const messageSetSize = messageSet.length;\n  // TODO: this is broken logic. It overwrites previous partitions HWO.\n  // Need to refactor this on next major API bump\n  topics[topic].highWaterOffset = highWaterOffset;\n\n  let innerMessages = [];\n\n  while (messageSet.length > 0) {\n    var cur = 8 + 4 + 4 + 1 + 1 + 4 + 4;\n    var partial = false;\n    Binary.parse(messageSet)\n      .word64bs('offset')\n      .word32bs('messageSize')\n      .tap(function (vars) {\n        if (vars.messageSize > messageSet.length - 12) {\n          partial = true;\n        }\n      })\n      .word32bs('crc')\n      .word8bs('magicByte')\n      .word8bs('attributes')\n      .tap(function (vars) {\n        if (vars.magicByte > 0) {\n          this.word64bs('timestamp');\n          cur += 8;\n        }\n      })\n      .word32bs('key')\n      .tap(function (vars) {\n        if (vars.key === -1) {\n          vars.key = null;\n          return;\n        }\n        cur += vars.key;\n        this.buffer('key', vars.key);\n      })\n      .word32bs('value')\n      .tap(function (vars) {\n        if (vars.value !== -1) {\n          cur += vars.value;\n          this.buffer('value', vars.value);\n        } else {\n          vars.value = null;\n        }\n\n        if (vars.attributes === 0 && vars.messageSize > messageSetSize) {\n          const offset = vars.offset;\n          return enqueue(next => {\n            emit(\n              new MessageSizeTooLarge({\n                topic: topic,\n                offset: offset,\n                partition: partition\n              })\n            );\n            next(null);\n          });\n        }\n\n        if (!partial && vars.offset !== null) {\n          const offset = vars.offset;\n          const value = vars.value;\n          const key = vars.key;\n          const magicByte = vars.magicByte;\n          var codec = getCodec(vars.attributes);\n          if (!codec) {\n            const message = {\n              topic: topic,\n              value: value,\n              offset: offset,\n              partition: partition,\n              highWaterOffset: highWaterOffset,\n              key: key\n            };\n\n            if (vars.timestamp) {\n              message.timestamp = new Date(vars.timestamp);\n            }\n\n            if (lastOffset != null) {\n              // need to fix offset skipping enqueue till later\n              innerMessages.push(message);\n              return;\n            }\n\n            enqueue((next) => {\n              emit(null, message);\n              next(null);\n            });\n            return;\n          }\n          enqueue((next) => {\n            codec.decode(value, function (error, inlineMessageSet) {\n              if (error) {\n                emit(error);\n                next(null);\n                return;\n              }\n              decodeMessageSet(topic, partition, inlineMessageSet, (cb) => {\n                cb(_.noop);\n              }, emit, highWaterOffset, topics, magicByte === 1 ? offset : null);\n\n              // Delay 1 tick as this isn't counted to max tick messages, give a breather\n              process.nextTick(() => next(null));\n            });\n          });\n        }\n      });\n    // Skip decoding binary left in the message set if partial message detected\n    if (partial) break;\n    messageSet = messageSet.slice(cur);\n  }\n\n  if (lastOffset != null && innerMessages.length) {\n    // contains inner messages, need to fix up offsets\n    let len = innerMessages.length - 1;\n    for (const message of innerMessages) {\n      const offset = lastOffset - len--;\n      message.offset = offset;\n      enqueue((next) => {\n        emit(null, message);\n        next(null);\n      });\n    }\n  }\n}\n\nfunction encodeMetadataRequest (clientId, correlationId, topics) {\n  return _encodeMetadataRequest(clientId, correlationId, topics, 0);\n}\n\nfunction decodeMetadataResponse (resp) {\n  return _decodeMetadataResponse(resp, 0);\n}\n\nfunction encodeMetadataV1Request (clientId, correlationId, topics) {\n  return _encodeMetadataRequest(clientId, correlationId, topics, 1);\n}\n\nfunction decodeMetadataV1Response (resp) {\n  return _decodeMetadataResponse(resp, 1);\n}\n\nfunction _encodeMetadataRequest (clientId, correlationId, topics, version) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.metadata, version);\n\n  // In version 0 an empty array will fetch all topics.\n  // In version 1+ a null value (-1) will fetch all topics. An empty array returns no topics.\n  // This adds support for maintaining version 0 behaviour in client regardless of kafka version ([] = fetch all topics).\n  if (version > 0 && ((Array.isArray(topics) && topics.length === 0) || topics === null)) {\n    request.Int32BE(-1);\n    return encodeRequestWithLength(request.make());\n  }\n\n  // Handle case where null is provided but version requested was 0 (not supported).\n  // Can happen if the api versions requests fails and fallback api support is used.\n  if (version === 0 && topics === null) {\n    topics = [];\n  }\n\n  request.Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _decodeMetadataResponse (resp, version) {\n  var brokers = {};\n  var out = {};\n  var topics = {};\n  var controllerId = -1;\n  var errors = [];\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('brokerNum')\n    .loop(decodeBrokers)\n    .tap(function (vars) {\n      if (version < 1) {\n        return;\n      }\n\n      this.word32bs('controllerId');\n      controllerId = vars.controllerId;\n    })\n    .word32bs('topicNum')\n    .loop(_decodeTopics);\n\n  function decodeBrokers (end, vars) {\n    if (vars.brokerNum-- === 0) return end();\n    this.word32bs('nodeId')\n      .word16bs('host')\n      .tap(function (vars) {\n        this.buffer('host', vars.host);\n        vars.host = vars.host.toString();\n      })\n      .word32bs('port')\n      .tap(function (vars) {\n        if (version < 1) {\n          return;\n        }\n\n        this.word16bs('rack');\n        if (vars.rack === -1) {\n          vars.rack = '';\n        } else {\n          this.buffer('rack', vars.rack);\n          vars.rack = vars.rack.toString();\n        }\n      })\n      .tap(function (vars) {\n        brokers[vars.nodeId] = { nodeId: vars.nodeId, host: vars.host, port: vars.port };\n      });\n  }\n\n  function _decodeTopics (end, vars) {\n    if (vars.topicNum-- === 0) return end();\n    this.word16bs('topicError')\n      .word16bs('topic')\n      .tap(function (vars) {\n        this.buffer('topic', vars.topic);\n        vars.topic = vars.topic.toString();\n\n        if (version < 1) {\n          return;\n        }\n\n        this.word8bs('isInternal');\n      })\n      .word32bs('partitionNum')\n      .tap(function (vars) {\n        if (vars.topicError !== 0) {\n          return errors.push(ERROR_CODE[vars.topicError]);\n        }\n        this.loop(decodePartitions);\n      });\n  }\n\n  function decodePartitions (end, vars) {\n    if (vars.partitionNum-- === 0) return end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word16bs('errorCode')\n      .word32bs('partition')\n      .word32bs('leader')\n      .word32bs('replicasNum')\n      .tap(function (vars) {\n        var buffer = this.buffer('replicas', vars.replicasNum * 4).vars.replicas;\n        this.vars.replicas = bufferToArray(vars.replicasNum, buffer);\n      })\n      .word32bs('isrNum')\n      .tap(function (vars) {\n        var buffer = this.buffer('isr', vars.isrNum * 4).vars.isr;\n        this.vars.isr = bufferToArray(vars.isrNum, buffer);\n        if (vars.errorCode === 0 || vars.errorCode === 9) {\n          topics[vars.topic][vars.partition] = new PartitionMetadata(\n            vars.topic,\n            vars.partition,\n            vars.leader,\n            vars.replicas,\n            vars.isr\n          );\n        } else {\n          errors.push(ERROR_CODE[vars.errorCode]);\n        }\n      });\n  }\n\n  if (!_.isEmpty(errors)) out.error = errors;\n  out.metadata = topics;\n\n  if (version > 0) {\n    out.clusterMetadata = {\n      controllerId\n    };\n  }\n\n  return [brokers, out];\n}\n\nfunction encodeCreateTopicRequest (clientId, correlationId, topics, timeoutMs) {\n  return _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, 0);\n}\n\nfunction encodeCreateTopicRequestV1 (clientId, correlationId, topics, timeoutMs) {\n  return _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, 1);\n}\n\nfunction _encodeCreateTopicRequest (clientId, correlationId, topics, timeoutMs, version) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.createTopics, version);\n  request.Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.topic.length).string(topic.topic);\n\n    // When replica assignment is used, partitions and replication factor must be unset (-1)\n    if (topic.replicaAssignment) {\n      request.Int32BE(-1);\n      request.Int16BE(-1);\n    } else {\n      request.Int32BE(topic.partitions);\n      request.Int16BE(topic.replicationFactor);\n    }\n\n    if (topic.replicaAssignment) {\n      request.Int32BE(topic.replicaAssignment.length);\n      topic.replicaAssignment.forEach(function (replicaAssignment) {\n        request.Int32BE(replicaAssignment.partition);\n        request.Int32BE(replicaAssignment.replicas.length);\n        replicaAssignment.replicas.forEach(function (replica) {\n          request.Int32BE(replica);\n        });\n      });\n    } else {\n      request.Int32BE(0);\n    }\n\n    if (topic.configEntries) {\n      request.Int32BE(topic.configEntries.length);\n      topic.configEntries.forEach(function (config) {\n        request.Int16BE(config.name.length).string(config.name);\n\n        if (config.value == null) {\n          request.Int16BE(-1);\n        } else {\n          request.Int16BE(config.value.length).string(config.value);\n        }\n      });\n    } else {\n      request.Int32BE(0);\n    }\n  });\n  request.Int32BE(timeoutMs);\n\n  // Validate only is 1+\n  if (version > 0) {\n    request.Int8(0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeCreateTopicResponse (resp) {\n  return _decodeCreateTopicResponse(resp, 0);\n}\n\nfunction decodeCreateTopicResponseV1 (resp) {\n  return _decodeCreateTopicResponse(resp, 1);\n}\n\nfunction _decodeCreateTopicResponse (resp, version) {\n  var topicErrorResponses = [];\n  var error;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics);\n\n  function decodeTopics (end, vars) {\n    if (vars.topicNum-- === 0) return end();\n\n    this.word16bs('topic')\n      .tap(function (vars) {\n        this.buffer('topic', vars.topic);\n        vars.topic = vars.topic.toString();\n      })\n      .word16bs('errorCode')\n      .tap(function (vars) {\n        if (version > 0) {\n          this.word16bs('errorMessage');\n\n          if (vars.errorMessage !== -1) {\n            this.buffer('errorMessage', vars.errorMessage);\n            vars.errorMessage = vars.errorMessage.toString();\n          }\n        }\n\n        if (vars.errorCode === 0) {\n          return;\n        }\n\n        // Errors that are not related to the actual topic(s) but the entire request\n        // (like timeout and sending the request to a non-controller)\n        if (vars.errorCode === 7 || vars.errorCode === 41) {\n          error = createGroupError(vars.errorCode);\n          return;\n        }\n\n        if (version > 0) {\n          topicErrorResponses.push({\n            topic: vars.topic,\n            error: vars.errorMessage\n          });\n        } else {\n          topicErrorResponses.push({\n            topic: vars.topic,\n            error: 'received error code ' + vars.errorCode + ' for topic'\n          });\n        }\n      });\n  }\n\n  return error || topicErrorResponses;\n}\n\nfunction bufferToArray (num, buffer) {\n  var ret = [];\n  for (var i = 0; i < num; i++) {\n    ret.push(Binary.parse(buffer).word32bs('r').vars.r);\n    buffer = buffer.slice(4);\n  }\n  return ret;\n}\n\nfunction encodeOffsetCommitRequest (group) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeOffsetCommitRequest(clientId, correlationId, group, payloads);\n  };\n}\n\nfunction encodeOffsetCommitV2Request (clientId, correlationId, group, generationId, memberId, payloads) {\n  return encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, 2);\n}\n\nfunction encodeOffsetCommitV1Request (clientId, correlationId, group, generationId, memberId, payloads) {\n  return encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, 1);\n}\n\nfunction encodeOffsetCommitGenericRequest (\n  clientId,\n  correlationId,\n  group,\n  generationId,\n  memberId,\n  payloads,\n  apiVersion\n) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetCommit, apiVersion);\n  var topics = Object.keys(payloads);\n\n  request\n    .Int16BE(group.length)\n    .string(group)\n    .Int32BE(generationId)\n    .Int16BE(memberId.length)\n    .string(memberId)\n    .Int64BE(-1)\n    .Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int16BE(p.metadata.length).string(p.metadata);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeOffsetCommitRequest (clientId, correlationId, group, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetCommit);\n  var topics = Object.keys(payloads);\n\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int16BE(p.metadata.length).string(p.metadata);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetCommitResponse (resp) {\n  var topics = {};\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorcode').tap(function (vars) {\n      topics[vars.topic]['partition'] = vars.partition;\n      topics[vars.topic]['errorCode'] = vars.errorcode;\n    });\n  }\n  return topics;\n}\n\nfunction encodeProduceRequest (requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 0);\n  };\n}\n\nfunction encodeProduceV1Request (requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 1);\n  };\n}\n\nfunction encodeProduceV2Request (requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 2);\n  };\n}\n\nfunction _encodeProduceRequest (clientId, correlationId, payloads, requireAcks, ackTimeoutMs, apiVersion) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.produce, apiVersion);\n  var topics = Object.keys(payloads);\n  request.Int16BE(requireAcks).Int32BE(ackTimeoutMs).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var reqs = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(reqs.length);\n    reqs.forEach(function (p) {\n      var messageSet = encodeMessageSet(p.messages, apiVersion === 2 ? 1 : 0);\n      request.Int32BE(p.partition).Int32BE(messageSet.length).string(messageSet);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction encodeMessageSet (messageSet, magic) {\n  var buffer = new Buffermaker();\n  messageSet.forEach(function (message) {\n    var msg = encodeMessage(message, magic);\n    buffer.Int64BE(0).Int32BE(msg.length).string(msg);\n  });\n  return buffer.make();\n}\n\nfunction encodeMessage (message, magic) {\n  if (magic == null) {\n    magic = 0;\n  }\n  var m = new Buffermaker().Int8(magic).Int8(message.attributes);\n\n  // Add timestamp support for new messages\n  if (magic === 1) {\n    m.Int64BE(message.timestamp);\n  }\n\n  var key = message.key;\n  setValueOnBuffer(m, key);\n\n  var value = message.value;\n  setValueOnBuffer(m, value);\n\n  m = m.make();\n  var crc = crc32.signed(m);\n  return new Buffermaker().Int32BE(crc).string(m).make();\n}\n\nfunction setValueOnBuffer (buffer, value) {\n  if (value != null) {\n    if (Buffer.isBuffer(value)) {\n      buffer.Int32BE(value.length);\n    } else {\n      if (typeof value !== 'string') value = value.toString();\n      buffer.Int32BE(Buffer.byteLength(value));\n    }\n    buffer.string(value);\n  } else {\n    buffer.Int32BE(-1);\n  }\n}\n\nfunction decodeProduceV1Response (resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions))\n    .word32bs('throttleTime');\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\n\nfunction decodeProduceV2Response (resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions))\n    .word32bs('throttleTime');\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').word64bs('timestamp').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\n\nfunction decodeProduceResponse (resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\n\nfunction encodeOffsetFetchRequest (group) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeOffsetFetchRequest(clientId, correlationId, group, payloads);\n  };\n}\n\nfunction encodeOffsetFetchV1Request (clientId, correlationId, group, payloads) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetFetch, 1);\n  var topics = Object.keys(payloads);\n\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic).Int32BE(payloads[topic].length);\n\n    payloads[topic].forEach(function (p) {\n      request.Int32BE(p);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeOffsetFetchRequest (clientId, correlationId, group, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetFetch);\n  var topics = Object.keys(payloads);\n\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetFetchResponse (resp) {\n  var topics = {};\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition')\n      .word64bs('offset')\n      .word16bs('metadata')\n      .tap(function (vars) {\n        if (vars.metadata === -1) {\n          return;\n        }\n\n        this.buffer('metadata', vars.metadata);\n      })\n      .word16bs('errorCode')\n      .tap(function (vars) {\n        topics[vars.topic][vars.partition] = vars.errorCode === 0 ? vars.offset : -1;\n      });\n  }\n  return topics;\n}\n\nfunction decodeOffsetFetchV1Response (resp) {\n  var topics = {};\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition')\n      .word64bs('offset')\n      .word16bs('metadata')\n      .tap(function (vars) {\n        if (vars.metadata === -1) {\n          return;\n        }\n\n        this.buffer('metadata', vars.metadata);\n      })\n      .word16bs('errorCode')\n      .tap(function (vars) {\n        if (vars.metadata.length === 0 && vars.offset === 0) {\n          topics[vars.topic][vars.partition] = -1;\n        } else {\n          topics[vars.topic][vars.partition] = vars.errorCode === 0 ? vars.offset : -1;\n        }\n      });\n  }\n  return topics;\n}\n\nfunction encodeOffsetRequest (clientId, correlationId, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offset);\n  var topics = Object.keys(payloads);\n\n  request.Int32BE(REPLICA_ID).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.time).Int32BE(p.maxNum);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetResponse (resp) {\n  var topics = {};\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word32bs('offsetNum').loop(decodeOffsets);\n  }\n\n  function decodeOffsets (end, vars) {\n    if (--vars.offsetNum <= 0) end();\n    topics[vars.topic][vars.partition] = topics[vars.topic][vars.partition] || [];\n    this.word64bs('offset').tap(function (vars) {\n      if (vars.offset != null) topics[vars.topic][vars.partition].push(vars.offset);\n    });\n  }\n  return topics;\n}\n\nfunction encodeGroupCoordinatorRequest (clientId, correlationId, groupId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.groupCoordinator);\n  request.Int16BE(groupId.length).string(groupId);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction encodeGroupHeartbeatRequest (clientId, correlationId, groupId, generationId, memberId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.heartbeat);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(generationId).Int16BE(memberId.length).string(memberId);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeGroupHeartbeatResponse (resp) {\n  var result = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    result = createGroupError(vars.errorCode);\n  });\n  return result;\n}\n\nfunction decodeGroupCoordinatorResponse (resp) {\n  var result;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .word32bs('coordinatorId')\n    .word16bs('coordinatorHost')\n    .tap(function (vars) {\n      this.buffer('coordinatorHost', vars.coordinatorHost);\n      vars.coordinatorHost = vars.coordinatorHost.toString();\n    })\n    .word32bs('coordinatorPort')\n    .tap(function (vars) {\n      if (vars.errorCode !== 0) {\n        result = createGroupError(vars.errorCode);\n        return;\n      }\n\n      result = {\n        coordinatorHost: vars.coordinatorHost,\n        coordinatorPort: vars.coordinatorPort,\n        coordinatorId: vars.coordinatorId\n      };\n    });\n  return result;\n}\n\n/*\n\nProtocolType => \"consumer\"\n\nProtocolName => AssignmentStrategy\n  AssignmentStrategy => string\n\nProtocolMetadata => Version Subscription UserData\n  Version => int16\n  Subscription => [Topic]\n    Topic => string\n  UserData => bytes\n*/\n\nfunction encodeGroupProtocol (protocol) {\n  this.Int16BE(protocol.name.length).string(protocol.name).string(_encodeProtocolData(protocol));\n}\n\nfunction _encodeProtocolData (protocol) {\n  var protocolByte = new Buffermaker().Int16BE(protocol.version).Int32BE(protocol.subscription.length);\n  protocol.subscription.forEach(function (topic) {\n    protocolByte.Int16BE(topic.length).string(topic);\n  });\n\n  if (protocol.userData) {\n    var userDataStr = JSON.stringify(protocol.userData);\n    var data = Buffer.from(userDataStr, 'utf8');\n    protocolByte.Int32BE(data.length).string(data);\n  } else {\n    protocolByte.Int32BE(-1);\n  }\n\n  return encodeRequestWithLength(protocolByte.make());\n}\n\nfunction decodeSyncGroupResponse (resp) {\n  var result;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(function (vars) {\n      result = createGroupError(vars.errorCode);\n    })\n    .word32bs('memberAssignment')\n    .tap(function (vars) {\n      if (result) {\n        return;\n      }\n      this.buffer('memberAssignment', vars.memberAssignment);\n      result = decodeMemberAssignment(vars.memberAssignment);\n    });\n\n  return result;\n}\n\n/*\nMemberAssignment => Version PartitionAssignment\n  Version => int16\n  PartitionAssignment => [Topic [Partition]]\n    Topic => string\n    Partition => int32\n  UserData => bytes\n*/\n\nfunction decodeMemberAssignment (assignmentBytes) {\n  var assignment = {\n    partitions: {}\n  };\n\n  Binary.parse(assignmentBytes)\n    .word16bs('version')\n    .tap(function (vars) {\n      assignment.version = vars.version;\n    })\n    .word32bs('partitionAssignment')\n    .loop(function (end, vars) {\n      if (vars.partitionAssignment-- === 0) return end();\n\n      var topic;\n      var partitions = [];\n\n      this.word16bs('topic')\n        .tap(function (vars) {\n          this.buffer('topic', vars.topic);\n          topic = vars.topic.toString();\n        })\n        .word32bs('partitionsNum')\n        .loop(function (end, vars) {\n          if (vars.partitionsNum-- === 0) return end();\n          this.word32bs('partition').tap(function (vars) {\n            partitions.push(vars.partition);\n          });\n        });\n      assignment.partitions[topic] = partitions;\n    })\n    .word32bs('userData')\n    .tap(function (vars) {\n      if (vars.userData == null || vars.userData === -1) {\n        return;\n      }\n      this.buffer('userData', vars.userData);\n      try {\n        assignment.userData = JSON.parse(vars.userData.toString());\n      } catch (e) {\n        assignment.userData = 'JSON Parse error';\n      }\n    });\n\n  return assignment;\n}\n\nfunction encodeSyncGroupRequest (clientId, correlationId, groupId, generationId, memberId, groupAssignment) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.syncGroup);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(generationId).Int16BE(memberId.length).string(memberId);\n\n  if (groupAssignment && groupAssignment.length) {\n    request.Int32BE(groupAssignment.length);\n    groupAssignment.forEach(function (assignment) {\n      request\n        .Int16BE(assignment.memberId.length)\n        .string(assignment.memberId)\n        .string(_encodeMemberAssignment(assignment));\n    });\n  } else {\n    request.Int32BE(0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeMemberAssignment (assignment) {\n  var numberOfTopics = Object.keys(assignment.topicPartitions).length;\n\n  var assignmentByte = new Buffermaker().Int16BE(assignment.version).Int32BE(numberOfTopics);\n\n  for (var tp in assignment.topicPartitions) {\n    if (!assignment.topicPartitions.hasOwnProperty(tp)) {\n      continue;\n    }\n    var partitions = assignment.topicPartitions[tp];\n    assignmentByte.Int16BE(tp.length).string(tp).Int32BE(partitions.length);\n\n    partitions.forEach(function (partition) {\n      assignmentByte.Int32BE(partition);\n    });\n  }\n\n  if (assignment.userData) {\n    var userDataStr = JSON.stringify(assignment.userData);\n    var data = Buffer.from(userDataStr, 'utf8');\n    assignmentByte.Int32BE(data.length).string(data);\n  } else {\n    assignmentByte.Int32BE(-1);\n  }\n\n  return encodeRequestWithLength(assignmentByte.make());\n}\n\nfunction encodeLeaveGroupRequest (clientId, correlationId, groupId, memberId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.leaveGroup);\n  request.Int16BE(groupId.length).string(groupId).Int16BE(memberId.length).string(memberId);\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeLeaveGroupResponse (resp) {\n  var error = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    error = createGroupError(vars.errorCode);\n  });\n  return error;\n}\n\n// {\n//   name: '', // string\n//   subscription: [/* topics */],\n//   version: 0, // integer\n//   userData: {} //arbitary\n// }\n\n/*\nJoinGroupRequest => GroupId SessionTimeout MemberId ProtocolType GroupProtocols\n  GroupId => string\n  SessionTimeout => int32\n  MemberId => string\n  ProtocolType => string\n  GroupProtocols => [ProtocolName ProtocolMetadata]\n    ProtocolName => string\n    ProtocolMetadata => bytes\n*/\n\nfunction encodeJoinGroupRequest (clientId, correlationId, groupId, memberId, sessionTimeout, groupProtocols) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.joinGroup);\n  request\n    .Int16BE(groupId.length)\n    .string(groupId)\n    .Int32BE(sessionTimeout)\n    .Int16BE(memberId.length)\n    .string(memberId)\n    .Int16BE(GROUPS_PROTOCOL_TYPE.length)\n    .string(GROUPS_PROTOCOL_TYPE)\n    .Int32BE(groupProtocols.length);\n\n  groupProtocols.forEach(encodeGroupProtocol.bind(request));\n\n  return encodeRequestWithLength(request.make());\n}\n\n/*\n\nv0 and v1 supported in 0.9.0 and greater\nJoinGroupResponse => ErrorCode GenerationId GroupProtocol LeaderId MemberId Members\n  ErrorCode => int16\n  GenerationId => int32\n  GroupProtocol => string\n  LeaderId => string\n  MemberId => string\n  Members => [MemberId MemberMetadata]\n    MemberId => string\n    MemberMetadata => bytes\n*/\nfunction decodeJoinGroupResponse (resp) {\n  var result = {\n    members: []\n  };\n\n  var error;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(function (vars) {\n      error = createGroupError(vars.errorCode);\n    })\n    .word32bs('generationId')\n    .tap(function (vars) {\n      result.generationId = vars.generationId;\n    })\n    .word16bs('groupProtocol')\n    .tap(function (vars) {\n      this.buffer('groupProtocol', vars.groupProtocol);\n      result.groupProtocol = vars.groupProtocol = vars.groupProtocol.toString();\n    })\n    .word16bs('leaderId')\n    .tap(function (vars) {\n      this.buffer('leaderId', vars.leaderId);\n      result.leaderId = vars.leaderId = vars.leaderId.toString();\n    })\n    .word16bs('memberId')\n    .tap(function (vars) {\n      this.buffer('memberId', vars.memberId);\n      result.memberId = vars.memberId = vars.memberId.toString();\n    })\n    .word32bs('memberNum')\n    .loop(function (end, vars) {\n      if (error) {\n        return end();\n      }\n\n      if (vars.memberNum-- === 0) return end();\n      var memberMetadata;\n      this.word16bs('groupMemberId')\n        .tap(function (vars) {\n          this.buffer('groupMemberId', vars.groupMemberId);\n          vars.memberId = vars.groupMemberId.toString();\n        })\n        .word32bs('memberMetadata')\n        .tap(function (vars) {\n          if (vars.memberMetadata > -1) {\n            this.buffer('memberMetadata', vars.memberMetadata);\n            memberMetadata = decodeGroupData(this.vars.memberMetadata);\n            memberMetadata.id = vars.memberId;\n            result.members.push(memberMetadata);\n          }\n        });\n    });\n\n  return error || result;\n}\n\nfunction decodeGroupData (resp) {\n  var topics = [];\n  var parsed = Binary.parse(resp)\n    .word16bs('version')\n    .word32bs('subscriptionNum')\n    .loop(function decodeSubscription (end, vars) {\n      if (vars.subscriptionNum-- === 0) return end();\n      this.word16bs('topic').tap(function () {\n        this.buffer('topic', vars.topic);\n        topics.push(vars.topic.toString());\n      });\n    })\n    .word32bs('userData')\n    .tap(function (vars) {\n      if (vars.userData === -1) {\n        vars.userData = undefined;\n        return;\n      }\n      this.buffer('userData', vars.userData);\n      try {\n        vars.userData = JSON.parse(vars.userData.toString());\n      } catch (error) {\n        vars.userData = 'JSON parse error';\n      }\n    }).vars;\n\n  return {\n    subscription: topics,\n    version: parsed.version,\n    userData: parsed.userData\n  };\n}\n\nfunction encodeDescribeGroups (clientId, correlationId, groups) {\n  const request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.describeGroups);\n\n  request.Int32BE(groups.length);\n  groups.forEach(groupId => {\n    request.Int16BE(groupId.length).string(groupId);\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeDescribeGroups (resp) {\n  let results = {};\n  let error;\n\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('describeNum').loop(decodeDescriptions);\n\n  function decodeDescriptions (end, vars) {\n    if (vars.describeNum-- === 0) return end();\n\n    let described = { members: [] };\n    this.word16bs('errorCode')\n      .tap(vars => {\n        error = createGroupError(vars.errorCode);\n      })\n      .word16bs('groupId')\n      .tap(vars => {\n        this.buffer('groupId', vars.groupId);\n        described.groupId = vars.groupId.toString();\n      })\n      .word16bs('state')\n      .tap(vars => {\n        this.buffer('state', vars.state);\n        described.state = vars.state.toString();\n      })\n      .word16bs('protocolType')\n      .tap(vars => {\n        this.buffer('protocolType', vars.protocolType);\n        described.protocolType = vars.protocolType.toString();\n      })\n      .word16bs('protocol')\n      .tap(vars => {\n        this.buffer('protocol', vars.protocol);\n        described.protocol = vars.protocol.toString();\n\n        // keep this for error cases\n        results[described.groupId] = described;\n      })\n      .word32bs('membersNum')\n      .loop(function decodeGroupMembers (end, vars) {\n        if (vars.membersNum-- === 0) return end();\n        let member = {};\n\n        this.word16bs('memberId')\n          .tap(vars => {\n            this.buffer('memberId', vars.memberId);\n            member.memberId = vars.memberId.toString();\n          })\n          .word16bs('clientId')\n          .tap(vars => {\n            this.buffer('clientId', vars.clientId);\n            member.clientId = vars.clientId.toString();\n          })\n          .word16bs('clientHost')\n          .tap(vars => {\n            this.buffer('clientHost', vars.clientHost);\n            member.clientHost = vars.clientHost.toString();\n          })\n          .word32bs('memberMetadata')\n          .tap(vars => {\n            if (vars.memberMetadata > -1) {\n              this.buffer('memberMetadata', vars.memberMetadata);\n              let memberMetadata = decodeGroupData(vars.memberMetadata);\n              memberMetadata.id = member.memberId;\n              member.memberMetadata = memberMetadata;\n            }\n          })\n          .word32bs('memberAssignment')\n          .tap(vars => {\n            this.buffer('memberAssignment', vars.memberAssignment);\n            member.memberAssignment = decodeMemberAssignment(vars.memberAssignment);\n            described.members.push(member);\n\n            results[described.groupId] = described;\n          });\n      });\n  }\n\n  return error || results;\n}\n\nfunction encodeListGroups (clientId, correlationId) {\n  return encodeRequestWithLength(encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.listGroups).make());\n}\n\nfunction decodeListGroups (resp) {\n  let groups = {};\n  let error;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(vars => {\n      error = createGroupError(vars.errorCode);\n    })\n    .word32bs('groupNum')\n    .loop(function (end, vars) {\n      if (vars.groupNum-- === 0) return end();\n\n      this.word16bs('groupId')\n        .tap(function (vars) {\n          this.buffer('groupId', vars.groupId);\n          vars.groupId = vars.groupId.toString();\n        })\n        .word16bs('protocolType')\n        .tap(function (vars) {\n          this.buffer('protocolType', vars.protocolType);\n          groups[vars.groupId] = vars.protocolType.toString();\n        });\n    });\n\n  return error || groups;\n}\n\nfunction encodeVersionsRequest (clientId, correlationId) {\n  return encodeRequestWithLength(encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.apiVersions).make());\n}\n\nfunction decodeVersionsResponse (resp) {\n  const MAX_SUPPORT_VERSION = require('./protocolVersions').maxSupport;\n  const versions = Object.create(null);\n  let error = null;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(function (vars) {\n      error = createGroupError(vars.errorCode);\n    })\n    .word32bs('apiNum')\n    .loop(function (end, vars) {\n      if (vars.apiNum-- === 0 || error) return end();\n\n      let apiKey, minVersion, maxVersion;\n\n      this.word16bs('apiKey')\n        .tap(vars => {\n          apiKey = vars.apiKey;\n        })\n        .word16bs('minVersion')\n        .tap(vars => {\n          minVersion = vars.minVersion;\n        })\n        .word16bs('maxVersion')\n        .tap(vars => {\n          maxVersion = vars.maxVersion;\n        });\n\n      const apiName = apiKey in API_KEY_TO_NAME ? API_KEY_TO_NAME[apiKey] : apiKey;\n\n      versions[apiName] = {\n        min: minVersion,\n        max: maxVersion,\n        usable: MAX_SUPPORT_VERSION[apiName] != null ? Math.min(MAX_SUPPORT_VERSION[apiName], maxVersion) : false\n      };\n    });\n  return error || versions;\n}\n\nfunction encodeDescribeConfigsRequest (clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 0);\n}\n\nfunction encodeDescribeConfigsRequestV1 (clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 1);\n}\n\nfunction encodeDescribeConfigsRequestV2 (clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 2);\n}\n\nfunction _encodeDescribeConfigsRequest (clientId, correlationId, payload, apiVersion) {\n  let request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.describeConfigs, apiVersion);\n  const resources = payload.resources;\n  request.Int32BE(resources.length);\n  resources.forEach(function (resource) {\n    request.Int8(resource.resourceType);\n    request.Int16BE(resource.resourceName.length);\n    request.string(resource.resourceName);\n    if (resource.configNames === null || (Array.isArray(resource.configNames) && resource.configNames.length === 0)) {\n      request.Int32BE(-1); // -1 will fetch all config entries for the resource\n    } else {\n      request.Int32BE(resource.configNames.length);\n      resource.configNames.forEach(function (configName) {\n        request.Int16BE(configName.length).string(configName);\n      });\n    }\n  });\n  if (apiVersion > 0) {\n    request.Int8(payload.includeSynonyms || 0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeDescribeConfigsResponse (resp) {\n  return _decodeDescribeConfigsResponse(resp, 0);\n}\n\nfunction decodeDescribeConfigsResponseV1 (resp) {\n  return _decodeDescribeConfigsResponse(resp, 1);\n}\n\nfunction decodeDescribeConfigsResponseV2 (resp) {\n  return _decodeDescribeConfigsResponse(resp, 2);\n}\n\nfunction _decodeDescribeConfigsResponse (resp, apiVersion) {\n  let resources = [];\n  let error;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('throttleTime')\n    .word32bs('resourceNum')\n    .loop(decodeResources);\n\n  function decodeResources (end, vars) {\n    if (vars.resourceNum-- === 0) return end();\n    let resource = { configEntries: [] };\n\n    this.word16bs('errorCode')\n      .word16bs('errorMessage')\n      .tap(function (vars) {\n        if (vars.errorCode !== 0) {\n          if (vars.errorMessage === -1) {\n            vars.errorMessage = '';\n          } else {\n            this.buffer('errorMessage', vars.errorMessage);\n            vars.errorMessage = vars.errorMessage.toString();\n          }\n          error = vars.errorCode === 42 ? new InvalidRequestError(vars.errorMessage) : createGroupError(vars.errorCode);\n        }\n      })\n      .word8bs('resourceType')\n      .word16bs('resourceName')\n      .tap(function (vars) {\n        this.buffer('resourceName', vars.resourceName);\n        resource.resourceType = vars.resourceType.toString();\n        resource.resourceName = vars.resourceName.toString();\n      })\n      .word32bs('configEntriesNum')\n      .loop(decodeConfigEntries)\n      .tap(function () {\n        resources.push(resource);\n      });\n\n    function decodeConfigEntries (end, vars) {\n      if (vars.configEntriesNum === -1 || vars.configEntriesNum-- === 0) return end();\n      let configEntry = { synonyms: [] };\n\n      this.word16bs('configName')\n        .tap(function (vars) {\n          this.buffer('configName', vars.configName);\n          configEntry.configName = vars.configName.toString();\n        })\n        .word16bs('configValue')\n        .tap(function (vars) {\n          if (vars.configValue === -1) {\n            vars.configValue = '';\n          } else {\n            this.buffer('configValue', vars.configValue);\n            vars.configValue = vars.configValue.toString();\n          }\n          configEntry.configValue = vars.configValue;\n        })\n        .word8bs('readOnly')\n        .word8bs('configSource')\n        .word8bs('isSensitive')\n        .tap(function () {\n          if (apiVersion > 0) {\n            this.word32bs('configSynonymsNum');\n            this.loop(decodeConfigSynonyms);\n          }\n        })\n        .tap(function (vars) {\n          configEntry.readOnly = Boolean(vars.readOnly);\n          configEntry.configSource = vars.configSource;\n          configEntry.isSensitive = Boolean(vars.isSensitive);\n          resource.configEntries.push(configEntry);\n        });\n\n      function decodeConfigSynonyms (end, vars) {\n        if (vars.configSynonymsNum === -1 || vars.configSynonymsNum-- === 0) return end();\n        let configSynonym = {};\n        this.word16bs('configSynonymName')\n          .tap(function (vars) {\n            this.buffer('configSynonymName', vars.configSynonymName);\n            configSynonym.configSynonymName = vars.configSynonymName.toString();\n          })\n          .word16bs('configSynonymValue')\n          .tap(function (vars) {\n            if (vars.configSynonymValue === -1) {\n              configSynonym.configSynonymValue = '';\n            } else {\n              this.buffer('configSynonymValue', vars.configSynonymValue);\n              configSynonym.configSynonymValue = vars.configSynonymValue.toString();\n            }\n          })\n          .word8bs('configSynonymSource')\n          .tap(function () {\n            configSynonym.configSynonymSource = vars.configSynonymSource.toString();\n            configEntry.synonyms.push(configSynonym);\n          });\n      }\n    }\n  }\n  return error || resources;\n}\n\nexports.encodeSaslHandshakeRequest = encodeSaslHandshakeRequest;\nexports.decodeSaslHandshakeResponse = decodeSaslHandshakeResponse;\nexports.encodeSaslAuthenticateRequest = encodeSaslAuthenticateRequest;\nexports.decodeSaslAuthenticateResponse = decodeSaslAuthenticateResponse;\n\nexports.encodeFetchRequest = encodeFetchRequest;\nexports.decodeFetchResponse = decodeFetchResponse;\nexports.encodeFetchRequestV1 = encodeFetchRequestV1;\nexports.decodeFetchResponseV1 = decodeFetchResponseV1;\nexports.encodeFetchRequestV2 = encodeFetchRequestV2;\n\nexports.encodeOffsetCommitRequest = encodeOffsetCommitRequest;\nexports.encodeOffsetCommitV1Request = encodeOffsetCommitV1Request;\nexports.encodeOffsetCommitV2Request = encodeOffsetCommitV2Request;\nexports.decodeOffsetCommitResponse = decodeOffsetCommitResponse;\n\nexports.encodeOffsetFetchRequest = encodeOffsetFetchRequest;\nexports.encodeOffsetFetchV1Request = encodeOffsetFetchV1Request;\nexports.decodeOffsetFetchResponse = decodeOffsetFetchResponse;\nexports.decodeOffsetFetchV1Response = decodeOffsetFetchV1Response;\nexports.encodeMetadataRequest = encodeMetadataRequest;\nexports.decodeMetadataResponse = decodeMetadataResponse;\nexports.encodeMetadataV1Request = encodeMetadataV1Request;\nexports.decodeMetadataV1Response = decodeMetadataV1Response;\n\nexports.encodeCreateTopicRequest = encodeCreateTopicRequest;\nexports.encodeCreateTopicRequestV1 = encodeCreateTopicRequestV1;\nexports.decodeCreateTopicResponse = decodeCreateTopicResponse;\nexports.decodeCreateTopicResponseV1 = decodeCreateTopicResponseV1;\n\nexports.encodeProduceRequest = encodeProduceRequest;\nexports.encodeProduceV1Request = encodeProduceV1Request;\nexports.encodeProduceV2Request = encodeProduceV2Request;\nexports.decodeProduceResponse = decodeProduceResponse;\nexports.decodeProduceV1Response = decodeProduceV1Response;\nexports.decodeProduceV2Response = decodeProduceV2Response;\n\nexports.encodeOffsetRequest = encodeOffsetRequest;\nexports.decodeOffsetResponse = decodeOffsetResponse;\nexports.encodeMessageSet = encodeMessageSet;\nexports.encodeJoinGroupRequest = encodeJoinGroupRequest;\nexports.decodeJoinGroupResponse = decodeJoinGroupResponse;\nexports.encodeGroupCoordinatorRequest = encodeGroupCoordinatorRequest;\nexports.decodeGroupCoordinatorResponse = decodeGroupCoordinatorResponse;\nexports.encodeGroupHeartbeatRequest = encodeGroupHeartbeatRequest;\nexports.decodeGroupHeartbeatResponse = decodeGroupHeartbeatResponse;\nexports.encodeSyncGroupRequest = encodeSyncGroupRequest;\nexports.decodeSyncGroupResponse = decodeSyncGroupResponse;\nexports.encodeLeaveGroupRequest = encodeLeaveGroupRequest;\nexports.decodeLeaveGroupResponse = decodeLeaveGroupResponse;\nexports.encodeDescribeGroups = encodeDescribeGroups;\nexports.decodeDescribeGroups = decodeDescribeGroups;\nexports.encodeListGroups = encodeListGroups;\nexports.decodeListGroups = decodeListGroups;\nexports.encodeVersionsRequest = encodeVersionsRequest;\nexports.decodeVersionsResponse = decodeVersionsResponse;\nexports.encodeDescribeConfigsRequest = encodeDescribeConfigsRequest;\nexports.encodeDescribeConfigsRequestV1 = encodeDescribeConfigsRequestV1;\nexports.encodeDescribeConfigsRequestV2 = encodeDescribeConfigsRequestV2;\nexports.decodeDescribeConfigsResponse = decodeDescribeConfigsResponse;\nexports.decodeDescribeConfigsResponseV1 = decodeDescribeConfigsResponseV1;\nexports.decodeDescribeConfigsResponseV2 = decodeDescribeConfigsResponseV2;\n"]},"metadata":{},"sourceType":"script"}