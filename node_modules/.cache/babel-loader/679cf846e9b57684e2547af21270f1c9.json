{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar groupPartitionsByTopic = require('../utils').groupPartitionsByTopic;\n\nvar logger = require('../logging')('kafka-node:Roundrobin');\n\nvar VERSION = 0;\n\nfunction assignRoundRobin(topicPartition, groupMembers, callback) {\n  logger.debug('topicPartition: %j', topicPartition);\n  logger.debug('groupMembers: %j', groupMembers);\n\n  var _members = _(groupMembers).map('id');\n\n  var members = _members.value().sort();\n\n  logger.debug('members', members);\n\n  var assignment = _members.reduce(function (obj, id) {\n    obj[id] = [];\n    return obj;\n  }, {});\n\n  var subscriberMap = groupMembers.reduce(function (subscribers, member) {\n    subscribers[member.id] = member.subscription;\n    return subscribers;\n  }, {});\n  logger.debug('subscribers', subscriberMap); // layout topic/partitions pairs into a list\n\n  var topicPartitionList = _(topicPartition).map(function (partitions, topic) {\n    return partitions.map(function (partition) {\n      return {\n        topic: topic,\n        partition: partition\n      };\n    });\n  }).flatten().value();\n\n  logger.debug('round robin on topic partition pairs: ', topicPartitionList);\n  var assigner = cycle(members);\n  topicPartitionList.forEach(function (tp) {\n    var topic = tp.topic;\n\n    while (!_.includes(subscriberMap[assigner.peek()], topic)) {\n      assigner.next();\n    }\n\n    assignment[assigner.next()].push(tp);\n  });\n\n  var ret = _.map(assignment, function (value, key) {\n    var ret = {};\n    ret.memberId = key;\n    ret.topicPartitions = groupPartitionsByTopic(value);\n    ret.version = VERSION;\n    return ret;\n  });\n\n  callback(null, ret);\n}\n\nfunction cycle(arr) {\n  var index = -1;\n  var len = arr.length;\n  return {\n    peek: function () {\n      return arr[(index + 1) % len];\n    },\n    next: function () {\n      index = ++index % len;\n      return arr[index];\n    }\n  };\n}\n\nmodule.exports = {\n  assign: assignRoundRobin,\n  name: 'roundrobin',\n  version: VERSION\n};","map":{"version":3,"sources":["/home/jerem/Bureau/Cours/IWA/stopcovid-front/node_modules/kafka-node/lib/assignment/roundrobin.js"],"names":["_","require","groupPartitionsByTopic","logger","VERSION","assignRoundRobin","topicPartition","groupMembers","callback","debug","_members","map","members","value","sort","assignment","reduce","obj","id","subscriberMap","subscribers","member","subscription","topicPartitionList","partitions","topic","partition","flatten","assigner","cycle","forEach","tp","includes","peek","next","push","ret","key","memberId","topicPartitions","version","arr","index","len","length","module","exports","assign","name"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar groupPartitionsByTopic = require('../utils').groupPartitionsByTopic;\nvar logger = require('../logging')('kafka-node:Roundrobin');\nvar VERSION = 0;\n\nfunction assignRoundRobin (topicPartition, groupMembers, callback) {\n  logger.debug('topicPartition: %j', topicPartition);\n  logger.debug('groupMembers: %j', groupMembers);\n  var _members = _(groupMembers).map('id');\n  var members = _members.value().sort();\n  logger.debug('members', members);\n  var assignment = _members.reduce(function (obj, id) {\n    obj[id] = [];\n    return obj;\n  }, {});\n\n  var subscriberMap = groupMembers.reduce(function (subscribers, member) {\n    subscribers[member.id] = member.subscription;\n    return subscribers;\n  }, {});\n\n  logger.debug('subscribers', subscriberMap);\n\n  // layout topic/partitions pairs into a list\n  var topicPartitionList = _(topicPartition).map(function (partitions, topic) {\n    return partitions.map(function (partition) {\n      return {\n        topic: topic,\n        partition: partition\n      };\n    });\n  }).flatten().value();\n  logger.debug('round robin on topic partition pairs: ', topicPartitionList);\n\n  var assigner = cycle(members);\n\n  topicPartitionList.forEach(function (tp) {\n    var topic = tp.topic;\n    while (!_.includes(subscriberMap[assigner.peek()], topic)) {\n      assigner.next();\n    }\n    assignment[assigner.next()].push(tp);\n  });\n\n  var ret = _.map(assignment, function (value, key) {\n    var ret = {};\n    ret.memberId = key;\n    ret.topicPartitions = groupPartitionsByTopic(value);\n    ret.version = VERSION;\n    return ret;\n  });\n\n  callback(null, ret);\n}\n\nfunction cycle (arr) {\n  var index = -1;\n  var len = arr.length;\n  return {\n    peek: function () {\n      return arr[(index + 1) % len];\n    },\n    next: function () {\n      index = ++index % len;\n      return arr[index];\n    }\n  };\n}\n\nmodule.exports = {\n  assign: assignRoundRobin,\n  name: 'roundrobin',\n  version: VERSION\n};\n"]},"metadata":{},"sourceType":"script"}