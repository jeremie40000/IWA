{"ast":null,"code":"'use strict';\n\nfunction createStruct() {\n  var args = arguments[0];\n  return function () {\n    for (var i = 0; i < args.length; i++) {\n      this[args[i]] = arguments[i];\n    }\n  };\n}\n\nvar KEYS = {\n  FetchRequest: ['topic', 'partition', 'offset', 'maxBytes'],\n  FetchResponse: ['topic', 'fetchPartitions'],\n  OffsetCommitRequest: ['topic', 'partition', 'offset', 'metadata', 'committing', 'autoCommitIntervalMs'],\n  OffsetCommitResponse: [],\n  TopicAndPartition: ['topic', 'partition'],\n  PartitionMetadata: ['topic', 'partition', 'leader', 'replicas', 'isr'],\n  Message: ['magic', 'attributes', 'key', 'value', 'timestamp'],\n  ProduceRequest: ['topic', 'partition', 'messages', 'attributes'],\n  Request: ['payloads', 'encoder', 'decoder', 'callback']\n};\nvar ERROR_CODE = {\n  '0': 'NoError',\n  '-1': 'Unknown',\n  '1': 'OffsetOutOfRange',\n  '2': 'InvalidMessage',\n  '3': 'UnknownTopicOrPartition',\n  '4': 'InvalidMessageSize',\n  '5': 'LeaderNotAvailable',\n  '6': 'NotLeaderForPartition',\n  '7': 'RequestTimedOut',\n  '8': 'BrokerNotAvailable',\n  '9': 'ReplicaNotAvailable',\n  '10': 'MessageSizeTooLarge',\n  '11': 'StaleControllerEpochCode',\n  '12': 'OffsetMetadataTooLargeCode',\n  '14': 'GroupLoadInProgress',\n  '15': 'GroupCoordinatorNotAvailable',\n  '16': 'NotCoordinatorForGroup',\n  '17': 'InvalidTopic',\n  '18': 'RecordListTooLarge',\n  '19': 'NotEnoughReplicas',\n  '20': 'NotEnoughReplicasAfterAppend',\n  '21': 'InvalidRequiredAcks',\n  '22': 'IllegalGeneration',\n  '23': 'InconsistentGroupProtocol',\n  '25': 'UnknownMemberId',\n  '26': 'InvalidSessionTimeout',\n  '27': 'RebalanceInProgress',\n  '28': 'InvalidCommitOffsetSize',\n  '29': 'TopicAuthorizationFailed',\n  '30': 'GroupAuthorizationFailed',\n  '31': 'ClusterAuthorizationFailed',\n  '41': 'NotController',\n  '42': 'InvalidRequest'\n};\nvar GROUP_ERROR = {\n  GroupCoordinatorNotAvailable: require('../errors/GroupCoordinatorNotAvailableError'),\n  IllegalGeneration: require('../errors/IllegalGenerationError'),\n  NotCoordinatorForGroup: require('../errors/NotCoordinatorForGroupError'),\n  GroupLoadInProgress: require('../errors/GroupLoadInProgressError'),\n  UnknownMemberId: require('../errors/UnknownMemberIdError'),\n  RebalanceInProgress: require('../errors/RebalanceInProgressError'),\n  NotController: require('../errors/NotControllerError')\n};\nvar REQUEST_TYPE = {\n  produce: 0,\n  fetch: 1,\n  offset: 2,\n  metadata: 3,\n  leader: 4,\n  stopReplica: 5,\n  updateMetadata: 6,\n  controlledShutdown: 7,\n  offsetCommit: 8,\n  offsetFetch: 9,\n  groupCoordinator: 10,\n  joinGroup: 11,\n  heartbeat: 12,\n  leaveGroup: 13,\n  syncGroup: 14,\n  describeGroups: 15,\n  listGroups: 16,\n  saslHandshake: 17,\n  apiVersions: 18,\n  createTopics: 19,\n  deleteTopics: 20,\n  describeConfigs: 32,\n  saslAuthenticate: 36\n};\nObject.keys(KEYS).forEach(function (o) {\n  exports[o] = createStruct(KEYS[o]);\n});\nexports.KEYS = KEYS;\nexports.ERROR_CODE = ERROR_CODE;\nexports.GROUP_ERROR = GROUP_ERROR;\nexports.REQUEST_TYPE = REQUEST_TYPE;\n\nexports.KeyedMessage = function KeyedMessage(key, value) {\n  exports.Message.call(this, 0, 0, key, value, Date.now());\n};","map":{"version":3,"sources":["/home/jerem/Bureau/Cours/IWA/stopcovid-front/node_modules/kafka-node/lib/protocol/protocol_struct.js"],"names":["createStruct","args","arguments","i","length","KEYS","FetchRequest","FetchResponse","OffsetCommitRequest","OffsetCommitResponse","TopicAndPartition","PartitionMetadata","Message","ProduceRequest","Request","ERROR_CODE","GROUP_ERROR","GroupCoordinatorNotAvailable","require","IllegalGeneration","NotCoordinatorForGroup","GroupLoadInProgress","UnknownMemberId","RebalanceInProgress","NotController","REQUEST_TYPE","produce","fetch","offset","metadata","leader","stopReplica","updateMetadata","controlledShutdown","offsetCommit","offsetFetch","groupCoordinator","joinGroup","heartbeat","leaveGroup","syncGroup","describeGroups","listGroups","saslHandshake","apiVersions","createTopics","deleteTopics","describeConfigs","saslAuthenticate","Object","keys","forEach","o","exports","KeyedMessage","key","value","call","Date","now"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction createStruct () {\n  var args = arguments[0];\n  return function () {\n    for (var i = 0; i < args.length; i++) {\n      this[args[i]] = arguments[i];\n    }\n  };\n}\n\nvar KEYS = {\n  FetchRequest: ['topic', 'partition', 'offset', 'maxBytes'],\n  FetchResponse: ['topic', 'fetchPartitions'],\n  OffsetCommitRequest: ['topic', 'partition', 'offset', 'metadata', 'committing', 'autoCommitIntervalMs'],\n  OffsetCommitResponse: [],\n  TopicAndPartition: ['topic', 'partition'],\n  PartitionMetadata: ['topic', 'partition', 'leader', 'replicas', 'isr'],\n  Message: ['magic', 'attributes', 'key', 'value', 'timestamp'],\n  ProduceRequest: ['topic', 'partition', 'messages', 'attributes'],\n  Request: ['payloads', 'encoder', 'decoder', 'callback']\n};\n\nvar ERROR_CODE = {\n  '0': 'NoError',\n  '-1': 'Unknown',\n  '1': 'OffsetOutOfRange',\n  '2': 'InvalidMessage',\n  '3': 'UnknownTopicOrPartition',\n  '4': 'InvalidMessageSize',\n  '5': 'LeaderNotAvailable',\n  '6': 'NotLeaderForPartition',\n  '7': 'RequestTimedOut',\n  '8': 'BrokerNotAvailable',\n  '9': 'ReplicaNotAvailable',\n  '10': 'MessageSizeTooLarge',\n  '11': 'StaleControllerEpochCode',\n  '12': 'OffsetMetadataTooLargeCode',\n  '14': 'GroupLoadInProgress',\n  '15': 'GroupCoordinatorNotAvailable',\n  '16': 'NotCoordinatorForGroup',\n  '17': 'InvalidTopic',\n  '18': 'RecordListTooLarge',\n  '19': 'NotEnoughReplicas',\n  '20': 'NotEnoughReplicasAfterAppend',\n  '21': 'InvalidRequiredAcks',\n  '22': 'IllegalGeneration',\n  '23': 'InconsistentGroupProtocol',\n  '25': 'UnknownMemberId',\n  '26': 'InvalidSessionTimeout',\n  '27': 'RebalanceInProgress',\n  '28': 'InvalidCommitOffsetSize',\n  '29': 'TopicAuthorizationFailed',\n  '30': 'GroupAuthorizationFailed',\n  '31': 'ClusterAuthorizationFailed',\n  '41': 'NotController',\n  '42': 'InvalidRequest'\n};\n\nvar GROUP_ERROR = {\n  GroupCoordinatorNotAvailable: require('../errors/GroupCoordinatorNotAvailableError'),\n  IllegalGeneration: require('../errors/IllegalGenerationError'),\n  NotCoordinatorForGroup: require('../errors/NotCoordinatorForGroupError'),\n  GroupLoadInProgress: require('../errors/GroupLoadInProgressError'),\n  UnknownMemberId: require('../errors/UnknownMemberIdError'),\n  RebalanceInProgress: require('../errors/RebalanceInProgressError'),\n  NotController: require('../errors/NotControllerError')\n};\n\nvar REQUEST_TYPE = {\n  produce: 0,\n  fetch: 1,\n  offset: 2,\n  metadata: 3,\n  leader: 4,\n  stopReplica: 5,\n  updateMetadata: 6,\n  controlledShutdown: 7,\n  offsetCommit: 8,\n  offsetFetch: 9,\n  groupCoordinator: 10,\n  joinGroup: 11,\n  heartbeat: 12,\n  leaveGroup: 13,\n  syncGroup: 14,\n  describeGroups: 15,\n  listGroups: 16,\n  saslHandshake: 17,\n  apiVersions: 18,\n  createTopics: 19,\n  deleteTopics: 20,\n  describeConfigs: 32,\n  saslAuthenticate: 36\n};\n\nObject.keys(KEYS).forEach(function (o) {\n  exports[o] = createStruct(KEYS[o]);\n});\nexports.KEYS = KEYS;\nexports.ERROR_CODE = ERROR_CODE;\nexports.GROUP_ERROR = GROUP_ERROR;\nexports.REQUEST_TYPE = REQUEST_TYPE;\nexports.KeyedMessage = function KeyedMessage (key, value) {\n  exports.Message.call(this, 0, 0, key, value, Date.now());\n};\n"]},"metadata":{},"sourceType":"script"}